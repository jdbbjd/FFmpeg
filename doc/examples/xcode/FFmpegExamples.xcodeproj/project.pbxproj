// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXAggregateTarget section */
		633E8400CB624581848F9F28 /* ZERO_CHECK */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 8C4D297CB2F04F67BA48120B /* Build configuration list for PBXAggregateTarget "ZERO_CHECK" */;
			buildPhases = (
				3FA5C55E7AB6A4F27FFF4789 /* Generate CMakeFiles/ZERO_CHECK */,
			);
			dependencies = (
			);
			name = ZERO_CHECK;
			productName = ZERO_CHECK;
		};
		F5CFF8E41CD341F7992A74D2 /* ALL_BUILD */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = C48164559A404C5BB0B9BDCE /* Build configuration list for PBXAggregateTarget "ALL_BUILD" */;
			buildPhases = (
				5774497EBB9268464D1D427F /* Generate CMakeFiles/ALL_BUILD */,
			);
			dependencies = (
				8F60B194B6BF495CA36640F0 /* PBXTargetDependency */,
				C5AA3F1096D445F3A102B5BA /* PBXTargetDependency */,
				A8C6BB6F3B42459CB65B4D98 /* PBXTargetDependency */,
				8144B331AFE047B3A6929256 /* PBXTargetDependency */,
				87C38CE1F3FE4B65AF6AF1F5 /* PBXTargetDependency */,
				23BA07D6AEE448DD82B6471E /* PBXTargetDependency */,
				4B21F7CA71C344BDA0AF091A /* PBXTargetDependency */,
				2149D7E1D19A4F10AD656E35 /* PBXTargetDependency */,
				3577711AB52E4757BD31EAE3 /* PBXTargetDependency */,
				7ABB3BC7088940D491CA0227 /* PBXTargetDependency */,
				4D95C7D53017480B954704D9 /* PBXTargetDependency */,
				7F68AEBDBBFA4F98AD35F289 /* PBXTargetDependency */,
				AC55578AAC344AA491225EC0 /* PBXTargetDependency */,
				FC6139FEF36C45F98D5172C5 /* PBXTargetDependency */,
				FA52D216D089462DB6C64ADC /* PBXTargetDependency */,
				A2ADB30C95764610872F7D1C /* PBXTargetDependency */,
				86A3AC5BE3444681ABD13B7C /* PBXTargetDependency */,
				B34C1EAB90674678A20073A7 /* PBXTargetDependency */,
				42D4D8F2BEC3424E84118CF6 /* PBXTargetDependency */,
				648D2B600A9A43C6A11F86A7 /* PBXTargetDependency */,
			);
			name = ALL_BUILD;
			productName = ALL_BUILD;
		};
/* End PBXAggregateTarget section */

/* Begin PBXBuildFile section */
		02132C412A0A490FBD704341 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/decode_video.c */ = {isa = PBXBuildFile; fileRef = 52B5BFA4AF394A7881E9132F /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/decode_video.c */; };
		06CF759B19B24DCDA750B47F /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 2CD565AF07314173856B7FB8 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */; };
		07DBE8E235A548AE8A5F71CA /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 12465DC605FE42DBA6C9079E /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */; };
		0EF35612B09146D4809F6E16 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/transcode_aac.c */ = {isa = PBXBuildFile; fileRef = 510B25903AA2405687161490 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/transcode_aac.c */; };
		190282431F0341A8BF576CAE /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = ABDD5AAA8B2A4C95A6D4EED9 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */; };
		21A1CBAAFA794555A677BD2A /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/avio_list_dir.c */ = {isa = PBXBuildFile; fileRef = A39373644134493093F12DD8 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/avio_list_dir.c */; };
		250A7EA5468347E79F2E41CD /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 0E1943CB529A4D6CBC6ED62E /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */; };
		2683D0C6E875475597E0F945 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 89830CFF678343878940038E /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */; };
		27233ECA414A4C679FA88F59 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 79491E2CAC4F4A168400D939 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */; };
		2A14ED2A8DA8451EB6F85741 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = EC852EDE0315421A8A994820 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */; };
		2B1435E86E2848328F7A0C01 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/encode_audio.c */ = {isa = PBXBuildFile; fileRef = 162453E80C96475697D3EABB /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/encode_audio.c */; };
		2CA9569C225945CF9E3C748F /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/filtering_audio.c */ = {isa = PBXBuildFile; fileRef = F18257C8732841B098D86D04 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/filtering_audio.c */; };
		3705866C4D794854855349D0 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/http_multiclient.c */ = {isa = PBXBuildFile; fileRef = 11CC3A55BC2D42558E66EDE1 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/http_multiclient.c */; };
		37C4502A8BAD4A46AD8E5446 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 699DE99082114A269DD6EB12 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */; };
		3A0E715A938748ABBB2CCF4D /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 5C32A70272FE4F1995DDA0F5 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */; };
		3C71A32A43AC47809A0168A5 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = F127B1B4D8B44ABD8A4597FE /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */; };
		4054299850924880AACFAAF6 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = EE7AFE9BC3614B25BF59573E /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */; };
		4D683C89AD314076853CA7A4 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/hw_decode.c */ = {isa = PBXBuildFile; fileRef = 138827E599FD4CD6988CB477 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/hw_decode.c */; };
		548CE6E651AB4D6F9905DA7B /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/remuxing.c */ = {isa = PBXBuildFile; fileRef = D856929A01F7455E994E37F3 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/remuxing.c */; };
		5ED7FF768C094483BEABDA6C /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/decode_audio.c */ = {isa = PBXBuildFile; fileRef = B76C3D9987E146718A22C0B2 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/decode_audio.c */; };
		65F512E18D5247EBAD8B9ADB /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 257490A15AB5414482F983C0 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */; };
		742C26515A25420AAA5C0AD9 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/filtering_video.c */ = {isa = PBXBuildFile; fileRef = 001589642EAA4F76B23BDBF5 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/filtering_video.c */; };
		7477AEB2DF7A4854A64CDD0F /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/resampling_audio.c */ = {isa = PBXBuildFile; fileRef = AEC64974DDD64F8FA1435296 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/resampling_audio.c */; };
		843B496C43A244EBA237E609 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/muxing.c */ = {isa = PBXBuildFile; fileRef = E287AF3794494E749B7A37E1 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/muxing.c */; };
		935E72D85B9446A2BDA660CF /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 08D83C5F85F941DE802D302E /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */; };
		A09778C5666E4ED9ADC3FDEE /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/transcoding.c */ = {isa = PBXBuildFile; fileRef = EECCAC125F6A49DEB85CE9DE /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/transcoding.c */; };
		A30394105D79442CAE62BD40 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 8BAE288A7A3446C4B710C31C /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */; };
		AA533C834A5E4A658429CAFB /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 9213A73EA5A04B44BF73F9C8 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */; };
		ADB9B5D7A3FE4E8E92B07DA7 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 785093CCBE694F228CAABE1D /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */; };
		ADC9C4AE126942E4BEE2383D /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/extract_mvs.c */ = {isa = PBXBuildFile; fileRef = 3CD3FF5C6260402F867401D8 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/extract_mvs.c */; };
		B4F5F7D1350047009578299E /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/scaling_video.c */ = {isa = PBXBuildFile; fileRef = 71C4241C9BD24CF3A2D78E28 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/scaling_video.c */; };
		B81C9F002834433083B27815 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/encode_video.c */ = {isa = PBXBuildFile; fileRef = 689F0700AF3E4D178F0CE82E /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/encode_video.c */; };
		B9F0AFA341D445FD8D67349B /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/avio_reading.c */ = {isa = PBXBuildFile; fileRef = B4D7FAA045994F1E82CA7FE6 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/avio_reading.c */; };
		C09A225B23854C44A290C06E /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 2A6DFFBB41FB41C9B3BD360E /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */; };
		CBCD133F38DE4EA1B030B32A /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/demuxing_decoding.c */ = {isa = PBXBuildFile; fileRef = C46AD6BC7D03436FB84DFF90 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/demuxing_decoding.c */; };
		DBC468BD8B1F41FB836D7FB3 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = A74EC73489E44231AD949225 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */; };
		FAFC2EAD0B034C598D72DDF8 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 5F74536E7E8E41D7B83929DC /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */; };
		FCCE4F4F8A86485AA228D88F /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/metadata.c */ = {isa = PBXBuildFile; fileRef = 3B783CEF549D453A941C6CD9 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/metadata.c */; };
/* End PBXBuildFile section */

/* Begin PBXBuildStyle section */
		73A77E2A81EA441AA2724D58 /* Debug */ = {
			isa = PBXBuildStyle;
			buildSettings = {
				COPY_PHASE_STRIP = NO;
			};
			name = Debug;
		};
		755BD0669CDF441DA71C6B71 /* MinSizeRel */ = {
			isa = PBXBuildStyle;
			buildSettings = {
				COPY_PHASE_STRIP = NO;
			};
			name = MinSizeRel;
		};
		ADCF4B9AABBD49008DF40C58 /* RelWithDebInfo */ = {
			isa = PBXBuildStyle;
			buildSettings = {
				COPY_PHASE_STRIP = NO;
			};
			name = RelWithDebInfo;
		};
		CAFD538E262B4B09A51E6C13 /* Release */ = {
			isa = PBXBuildStyle;
			buildSettings = {
				COPY_PHASE_STRIP = NO;
			};
			name = Release;
		};
/* End PBXBuildStyle section */

/* Begin PBXContainerItemProxy section */
		0D2A10577434418991207AAE /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = B5A4A51868A34AD884CE72DA /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 645B0AD6798443BF9CCCC00B;
			remoteInfo = decode_video;
		};
		0E267319741C4A0589E8DBC3 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = B5A4A51868A34AD884CE72DA /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 633E8400CB624581848F9F28;
			remoteInfo = ZERO_CHECK;
		};
		201AD87087E8462D9C2474D6 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = B5A4A51868A34AD884CE72DA /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 12391E2E23D34A65B3AAB9B7;
			remoteInfo = decode_audio;
		};
		246BD094CFAA425AB875C143 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = B5A4A51868A34AD884CE72DA /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 88C3CA03ADA740EDA934A485;
			remoteInfo = avio_reading;
		};
		27E30C9E3DD84B3E95872A21 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = B5A4A51868A34AD884CE72DA /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = B4662582EAD54A6A8259067C;
			remoteInfo = muxing;
		};
		28FE2D94ACC14C9698284DD8 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = B5A4A51868A34AD884CE72DA /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 633E8400CB624581848F9F28;
			remoteInfo = ZERO_CHECK;
		};
		2A47EE1D56F6442BB37DEB0A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = B5A4A51868A34AD884CE72DA /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 633E8400CB624581848F9F28;
			remoteInfo = ZERO_CHECK;
		};
		406FAE744C9A46C38BFE2E41 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = B5A4A51868A34AD884CE72DA /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = F60828D8F52E4325A283D236;
			remoteInfo = scaling_video;
		};
		4BE3BABA19AF49A9863AD838 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = B5A4A51868A34AD884CE72DA /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 633E8400CB624581848F9F28;
			remoteInfo = ZERO_CHECK;
		};
		56D48A615B74458A9816D88B /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = B5A4A51868A34AD884CE72DA /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = FBE7071C2E6946B78CAFD898;
			remoteInfo = hw_decode;
		};
		6183C1F61C51461686207F47 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = B5A4A51868A34AD884CE72DA /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = CBDF41E94A5A451E9D3C055F;
			remoteInfo = transcoding;
		};
		7E2800272B3D40F1AD3631B8 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = B5A4A51868A34AD884CE72DA /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 633E8400CB624581848F9F28;
			remoteInfo = ZERO_CHECK;
		};
		876848099A7441598A58D2C0 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = B5A4A51868A34AD884CE72DA /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D650E58B68B843FEB7CFCC40;
			remoteInfo = filtering_audio;
		};
		87AF42C67B6148CE97CBE87C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = B5A4A51868A34AD884CE72DA /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 633E8400CB624581848F9F28;
			remoteInfo = ZERO_CHECK;
		};
		94E6F7DAFDCC48D982F80D7E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = B5A4A51868A34AD884CE72DA /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 633E8400CB624581848F9F28;
			remoteInfo = ZERO_CHECK;
		};
		95939271FB674B4086A9AD7C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = B5A4A51868A34AD884CE72DA /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 15D27A4A0FD9440986880926;
			remoteInfo = filtering_video;
		};
		96E46B483B884F31AFF35952 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = B5A4A51868A34AD884CE72DA /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = A57F9B52C3E94C6FBF5CC05F;
			remoteInfo = extract_mvs;
		};
		9B72354DE3104464A9EF0ED6 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = B5A4A51868A34AD884CE72DA /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 633E8400CB624581848F9F28;
			remoteInfo = ZERO_CHECK;
		};
		9E4A18BBE1D1430EB59BD526 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = B5A4A51868A34AD884CE72DA /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 633E8400CB624581848F9F28;
			remoteInfo = ZERO_CHECK;
		};
		A8C5DE9973EA4F18B50112C6 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = B5A4A51868A34AD884CE72DA /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = F8099AADAB7C4D33BCCDC50B;
			remoteInfo = avio_list_dir;
		};
		A90805B800B646B19FD76C2A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = B5A4A51868A34AD884CE72DA /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 633E8400CB624581848F9F28;
			remoteInfo = ZERO_CHECK;
		};
		AF1971C69C6A418B81474728 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = B5A4A51868A34AD884CE72DA /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = DB390A0757F744A4BA8217B6;
			remoteInfo = demuxing_decoding;
		};
		AFC69B33289A496EA140037B /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = B5A4A51868A34AD884CE72DA /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = BBEC7D284E3A4952972E7489;
			remoteInfo = http_multiclient;
		};
		B094619A5B164DC4B73598E7 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = B5A4A51868A34AD884CE72DA /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 633E8400CB624581848F9F28;
			remoteInfo = ZERO_CHECK;
		};
		B236FB61386A45CDA80CB7D6 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = B5A4A51868A34AD884CE72DA /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 1124CCCB48DF46DF998C9B60;
			remoteInfo = metadata;
		};
		B424CBFEF45642EEB30DBF01 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = B5A4A51868A34AD884CE72DA /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 633E8400CB624581848F9F28;
			remoteInfo = ZERO_CHECK;
		};
		B807FFB298D14DC9BDD6211B /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = B5A4A51868A34AD884CE72DA /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 633E8400CB624581848F9F28;
			remoteInfo = ZERO_CHECK;
		};
		B90D115676EC431A92BB21DE /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = B5A4A51868A34AD884CE72DA /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 6D8EE873FA5146C992E3264A;
			remoteInfo = encode_audio;
		};
		BA737CB77BFA405B9D7D4E61 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = B5A4A51868A34AD884CE72DA /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 353316EBF9A443BE8EC2E6E5;
			remoteInfo = transcode_aac;
		};
		C020A487FF62443599E7201B /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = B5A4A51868A34AD884CE72DA /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 633E8400CB624581848F9F28;
			remoteInfo = ZERO_CHECK;
		};
		CACDDF4F78DF47D882BFA1EF /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = B5A4A51868A34AD884CE72DA /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 5356F437E5F648B8944DA2C3;
			remoteInfo = remuxing;
		};
		D1D91B2FFF5946DE9AD1F94D /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = B5A4A51868A34AD884CE72DA /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 6A13F68E3EAB4B43B1357C87;
			remoteInfo = encode_video;
		};
		D58762D61AFA4668B66E3B5D /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = B5A4A51868A34AD884CE72DA /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 633E8400CB624581848F9F28;
			remoteInfo = ZERO_CHECK;
		};
		DEC3A7A3DF9443E995F8D9F9 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = B5A4A51868A34AD884CE72DA /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 633E8400CB624581848F9F28;
			remoteInfo = ZERO_CHECK;
		};
		DF76266B03AE4AF0839E3D94 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = B5A4A51868A34AD884CE72DA /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 633E8400CB624581848F9F28;
			remoteInfo = ZERO_CHECK;
		};
		E0EC84CB2BBA46098DB628E4 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = B5A4A51868A34AD884CE72DA /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 633E8400CB624581848F9F28;
			remoteInfo = ZERO_CHECK;
		};
		E34AB3BAECF14A60A39EC21E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = B5A4A51868A34AD884CE72DA /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 20FEBC18EF59403A92F1F0F1;
			remoteInfo = resampling_audio;
		};
		E6311F93FCE645B2A24C9457 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = B5A4A51868A34AD884CE72DA /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 633E8400CB624581848F9F28;
			remoteInfo = ZERO_CHECK;
		};
		FDF7C3CA797D43C195BFEBE4 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = B5A4A51868A34AD884CE72DA /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 633E8400CB624581848F9F28;
			remoteInfo = ZERO_CHECK;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		001589642EAA4F76B23BDBF5 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/filtering_video.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = filtering_video.c; path = filtering_video.c; sourceTree = SOURCE_ROOT; };
		08D83C5F85F941DE802D302E /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		09895ECD0A4F424FAFEA5CD1 /* avio_reading */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = avio_reading; sourceTree = BUILT_PRODUCTS_DIR; };
		0E1943CB529A4D6CBC6ED62E /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		11CC3A55BC2D42558E66EDE1 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/http_multiclient.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = http_multiclient.c; path = http_multiclient.c; sourceTree = SOURCE_ROOT; };
		12465DC605FE42DBA6C9079E /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		138827E599FD4CD6988CB477 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/hw_decode.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = hw_decode.c; path = hw_decode.c; sourceTree = SOURCE_ROOT; };
		15FB27C0E96C4C46943E5200 /* transcoding */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = transcoding; sourceTree = BUILT_PRODUCTS_DIR; };
		162453E80C96475697D3EABB /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/encode_audio.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = encode_audio.c; path = encode_audio.c; sourceTree = SOURCE_ROOT; };
		18D3AAA91F5248D380E6BCA4 /* extract_mvs */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = extract_mvs; sourceTree = BUILT_PRODUCTS_DIR; };
		257490A15AB5414482F983C0 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		2A6DFFBB41FB41C9B3BD360E /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		2CD565AF07314173856B7FB8 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		376EF84079B545B5A6D7F0DF /* encode_video */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = encode_video; sourceTree = BUILT_PRODUCTS_DIR; };
		3B783CEF549D453A941C6CD9 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/metadata.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = metadata.c; path = metadata.c; sourceTree = SOURCE_ROOT; };
		3C7DBB8C7F1E48989AC8BD97 /* resampling_audio */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = resampling_audio; sourceTree = BUILT_PRODUCTS_DIR; };
		3CD3FF5C6260402F867401D8 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/extract_mvs.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = extract_mvs.c; path = extract_mvs.c; sourceTree = SOURCE_ROOT; };
		3CDF8FD690B74881ABBEB521 /* avio_list_dir */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = avio_list_dir; sourceTree = BUILT_PRODUCTS_DIR; };
		4AEC5BFA332B46D7866610EB /* metadata */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = metadata; sourceTree = BUILT_PRODUCTS_DIR; };
		510B25903AA2405687161490 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/transcode_aac.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = transcode_aac.c; path = transcode_aac.c; sourceTree = SOURCE_ROOT; };
		52B5BFA4AF394A7881E9132F /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/decode_video.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = decode_video.c; path = decode_video.c; sourceTree = SOURCE_ROOT; };
		53EEAE5594AD4139B1B9D25D /* remuxing */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = remuxing; sourceTree = BUILT_PRODUCTS_DIR; };
		5808391935264AEA9D90C14F /* scaling_video */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = scaling_video; sourceTree = BUILT_PRODUCTS_DIR; };
		5AA62716F3C34145890EABB5 /* transcode_aac */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = transcode_aac; sourceTree = BUILT_PRODUCTS_DIR; };
		5C32A70272FE4F1995DDA0F5 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		5F74536E7E8E41D7B83929DC /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		67BADD11A3C84EB3AA059B87 /* decode_audio */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = decode_audio; sourceTree = BUILT_PRODUCTS_DIR; };
		689F0700AF3E4D178F0CE82E /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/encode_video.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = encode_video.c; path = encode_video.c; sourceTree = SOURCE_ROOT; };
		68CBCAE6E2824D77A34C9852 /* filtering_audio */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = filtering_audio; sourceTree = BUILT_PRODUCTS_DIR; };
		699DE99082114A269DD6EB12 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		71C4241C9BD24CF3A2D78E28 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/scaling_video.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = scaling_video.c; path = scaling_video.c; sourceTree = SOURCE_ROOT; };
		785093CCBE694F228CAABE1D /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		79491E2CAC4F4A168400D939 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		80A76A72F7814B969FC6ADD1 /* decode_video */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = decode_video; sourceTree = BUILT_PRODUCTS_DIR; };
		89830CFF678343878940038E /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		8BAE288A7A3446C4B710C31C /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		9213A73EA5A04B44BF73F9C8 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		9B80D18456F44E028DDA850D /* demuxing_decoding */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = demuxing_decoding; sourceTree = BUILT_PRODUCTS_DIR; };
		A39373644134493093F12DD8 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/avio_list_dir.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = avio_list_dir.c; path = avio_list_dir.c; sourceTree = SOURCE_ROOT; };
		A74EC73489E44231AD949225 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		ABDD5AAA8B2A4C95A6D4EED9 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		AEC64974DDD64F8FA1435296 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/resampling_audio.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = resampling_audio.c; path = resampling_audio.c; sourceTree = SOURCE_ROOT; };
		B294604A468F4BF6ACDA99A1 /* encode_audio */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = encode_audio; sourceTree = BUILT_PRODUCTS_DIR; };
		B4D7FAA045994F1E82CA7FE6 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/avio_reading.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = avio_reading.c; path = avio_reading.c; sourceTree = SOURCE_ROOT; };
		B76C3D9987E146718A22C0B2 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/decode_audio.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = decode_audio.c; path = decode_audio.c; sourceTree = SOURCE_ROOT; };
		C2FA11C1A9E04FD49FDFA7B1 /* hw_decode */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = hw_decode; sourceTree = BUILT_PRODUCTS_DIR; };
		C46AD6BC7D03436FB84DFF90 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/demuxing_decoding.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = demuxing_decoding.c; path = demuxing_decoding.c; sourceTree = SOURCE_ROOT; };
		D856929A01F7455E994E37F3 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/remuxing.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = remuxing.c; path = remuxing.c; sourceTree = SOURCE_ROOT; };
		D90447A2DD3C4FFAACC3840C /* filtering_video */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = filtering_video; sourceTree = BUILT_PRODUCTS_DIR; };
		E287AF3794494E749B7A37E1 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/muxing.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = muxing.c; path = muxing.c; sourceTree = SOURCE_ROOT; };
		E70E5362368D44FA8189649F /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		EC23E7665B71401CB6BC1660 /* http_multiclient */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = http_multiclient; sourceTree = BUILT_PRODUCTS_DIR; };
		EC852EDE0315421A8A994820 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		EE7AFE9BC3614B25BF59573E /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		EECCAC125F6A49DEB85CE9DE /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/transcoding.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = transcoding.c; path = transcoding.c; sourceTree = SOURCE_ROOT; };
		F127B1B4D8B44ABD8A4597FE /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; name = CMakeLists.txt; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		F18257C8732841B098D86D04 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/filtering_audio.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = filtering_audio.c; path = filtering_audio.c; sourceTree = SOURCE_ROOT; };
		F62C4DDB24A341FA97423313 /* muxing */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = muxing; sourceTree = BUILT_PRODUCTS_DIR; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		0872D150036B4402B8DA7F6A /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		099873E1D1CC46519D0CDE91 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		3A7416F20752491F929FEA42 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		3D7D614CBF2B4FFB9DFE9404 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		3F16EA2FEF634888A713F605 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		649B918B83004CC08664C8A9 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		69374D82890440ADA916F8CD /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		6A60322EB76B444696E0BA2C /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		6D6B571EA6584C9882234678 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		944C6646C4E6472AA3237C0A /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		A06504CD15CA4C48A72F7525 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		AF420043FDD24E258C500CF7 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		B75137C27E0F4C5E81B1BA74 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		C89EB839807B4C53A8C168E4 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		DB4AC7F62CA0472AB7A20330 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		DFE2D17CE7524BB7993D2FA5 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		E4C4A7E495154D64A3185B53 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		E4FEAA30B3574FAA92EDC421 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		F6C39CAC643743589F0E6C97 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		024FFF8D676442FEB5F00638 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		042647EF8C084785BE2BCFA0 /* Frameworks */ = {
			isa = PBXGroup;
			children = (
			);
			name = Frameworks;
			sourceTree = "<group>";
		};
		0F7EE74363494F21B1274491 /* demuxing_decoding */ = {
			isa = PBXGroup;
			children = (
				125D17F186FB4F4286EFD316 /* Source Files */,
				EE7AFE9BC3614B25BF59573E /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */,
			);
			name = demuxing_decoding;
			sourceTree = "<group>";
		};
		125D17F186FB4F4286EFD316 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				C46AD6BC7D03436FB84DFF90 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/demuxing_decoding.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		12F414F23D434BF6BF177D59 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				689F0700AF3E4D178F0CE82E /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/encode_video.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1B138AFDDE7749C2AF0F7DAF /* Source Files */ = {
			isa = PBXGroup;
			children = (
				3CD3FF5C6260402F867401D8 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/extract_mvs.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1BDE5AC5C4CF498E9F099DF9 /* http_multiclient */ = {
			isa = PBXGroup;
			children = (
				3E1D4F3274904A509AA50C1B /* Source Files */,
				0E1943CB529A4D6CBC6ED62E /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */,
			);
			name = http_multiclient;
			sourceTree = "<group>";
		};
		1F5962F3F30841188405723E /* Source Files */ = {
			isa = PBXGroup;
			children = (
				B4D7FAA045994F1E82CA7FE6 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/avio_reading.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		21F5ED7FC677490A939F112A /* Products */ = {
			isa = PBXGroup;
			children = (
				3CDF8FD690B74881ABBEB521 /* avio_list_dir */,
				09895ECD0A4F424FAFEA5CD1 /* avio_reading */,
				67BADD11A3C84EB3AA059B87 /* decode_audio */,
				80A76A72F7814B969FC6ADD1 /* decode_video */,
				9B80D18456F44E028DDA850D /* demuxing_decoding */,
				B294604A468F4BF6ACDA99A1 /* encode_audio */,
				376EF84079B545B5A6D7F0DF /* encode_video */,
				18D3AAA91F5248D380E6BCA4 /* extract_mvs */,
				68CBCAE6E2824D77A34C9852 /* filtering_audio */,
				D90447A2DD3C4FFAACC3840C /* filtering_video */,
				EC23E7665B71401CB6BC1660 /* http_multiclient */,
				C2FA11C1A9E04FD49FDFA7B1 /* hw_decode */,
				4AEC5BFA332B46D7866610EB /* metadata */,
				F62C4DDB24A341FA97423313 /* muxing */,
				53EEAE5594AD4139B1B9D25D /* remuxing */,
				3C7DBB8C7F1E48989AC8BD97 /* resampling_audio */,
				5808391935264AEA9D90C14F /* scaling_video */,
				5AA62716F3C34145890EABB5 /* transcode_aac */,
				15FB27C0E96C4C46943E5200 /* transcoding */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		2322F600518C42C884940331 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				AEC64974DDD64F8FA1435296 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/resampling_audio.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		336BDBCA6D534917A2A9D798 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				B76C3D9987E146718A22C0B2 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/decode_audio.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		359F915AA0C04C4DBF8DE257 /* extract_mvs */ = {
			isa = PBXGroup;
			children = (
				1B138AFDDE7749C2AF0F7DAF /* Source Files */,
				08D83C5F85F941DE802D302E /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */,
			);
			name = extract_mvs;
			sourceTree = "<group>";
		};
		398B24ACF2AE4E7F8CD7AB50 /* transcode_aac */ = {
			isa = PBXGroup;
			children = (
				3C8294116040483FB08FAA74 /* Source Files */,
				5C32A70272FE4F1995DDA0F5 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */,
			);
			name = transcode_aac;
			sourceTree = "<group>";
		};
		3C8294116040483FB08FAA74 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				510B25903AA2405687161490 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/transcode_aac.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		3E1D4F3274904A509AA50C1B /* Source Files */ = {
			isa = PBXGroup;
			children = (
				11CC3A55BC2D42558E66EDE1 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/http_multiclient.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		40F2D25BB0C84C9585E95B34 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				001589642EAA4F76B23BDBF5 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/filtering_video.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		58B4F1D0712C4186B57C3530 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				52B5BFA4AF394A7881E9132F /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/decode_video.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		6FFF10A7F1EE4B099B927CB8 /* encode_audio */ = {
			isa = PBXGroup;
			children = (
				E5287006317644AAAB2EEF1A /* Source Files */,
				2CD565AF07314173856B7FB8 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */,
			);
			name = encode_audio;
			sourceTree = "<group>";
		};
		7A0209DB896F4059B5F57A8F /* Source Files */ = {
			isa = PBXGroup;
			children = (
				D856929A01F7455E994E37F3 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/remuxing.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		8214F4FE39BF4CE789908C6F /* resampling_audio */ = {
			isa = PBXGroup;
			children = (
				2322F600518C42C884940331 /* Source Files */,
				A74EC73489E44231AD949225 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */,
			);
			name = resampling_audio;
			sourceTree = "<group>";
		};
		8625CA33AE2A4915B733C5B0 /* metadata */ = {
			isa = PBXGroup;
			children = (
				FC1A98364F65457B8235D422 /* Source Files */,
				699DE99082114A269DD6EB12 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */,
			);
			name = metadata;
			sourceTree = "<group>";
		};
		86CA6BA31CCE40A784293191 /* avio_list_dir */ = {
			isa = PBXGroup;
			children = (
				A71C4F0FA65947C79BB8EF26 /* Source Files */,
				F127B1B4D8B44ABD8A4597FE /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */,
			);
			name = avio_list_dir;
			sourceTree = "<group>";
		};
		879B1814CC8843B5AB0384B1 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				138827E599FD4CD6988CB477 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/hw_decode.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		8C13CFDD53164EF6B0EB3DA9 /* ALL_BUILD */ = {
			isa = PBXGroup;
			children = (
				024FFF8D676442FEB5F00638 /* CMake Rules */,
				E70E5362368D44FA8189649F /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */,
			);
			name = ALL_BUILD;
			sourceTree = "<group>";
		};
		91BAF4CBD1BA4E2BBFAF37C1 /* decode_video */ = {
			isa = PBXGroup;
			children = (
				58B4F1D0712C4186B57C3530 /* Source Files */,
				ABDD5AAA8B2A4C95A6D4EED9 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */,
			);
			name = decode_video;
			sourceTree = "<group>";
		};
		9586DFFB80F3499DA948C73C /* filtering_audio */ = {
			isa = PBXGroup;
			children = (
				D54882EC4C0F45E683EA11E5 /* Source Files */,
				785093CCBE694F228CAABE1D /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */,
			);
			name = filtering_audio;
			sourceTree = "<group>";
		};
		989A376889BC4EA3A638015A /* transcoding */ = {
			isa = PBXGroup;
			children = (
				C02437B3D771495E9E2944F3 /* Source Files */,
				9213A73EA5A04B44BF73F9C8 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */,
			);
			name = transcoding;
			sourceTree = "<group>";
		};
		9C0FD7925C9640C6AC15CB48 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				E287AF3794494E749B7A37E1 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/muxing.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		9F7BC0CEFFDD4473AD307929 /* remuxing */ = {
			isa = PBXGroup;
			children = (
				7A0209DB896F4059B5F57A8F /* Source Files */,
				89830CFF678343878940038E /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */,
			);
			name = remuxing;
			sourceTree = "<group>";
		};
		A71C4F0FA65947C79BB8EF26 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				A39373644134493093F12DD8 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/avio_list_dir.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		BB4E92D573804AD4A052E275 /* muxing */ = {
			isa = PBXGroup;
			children = (
				9C0FD7925C9640C6AC15CB48 /* Source Files */,
				5F74536E7E8E41D7B83929DC /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */,
			);
			name = muxing;
			sourceTree = "<group>";
		};
		C02437B3D771495E9E2944F3 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				EECCAC125F6A49DEB85CE9DE /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/transcoding.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		D121C9C23AB647CCAA44C4DC /* avio_reading */ = {
			isa = PBXGroup;
			children = (
				1F5962F3F30841188405723E /* Source Files */,
				12465DC605FE42DBA6C9079E /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */,
			);
			name = avio_reading;
			sourceTree = "<group>";
		};
		D2E990D006ED452FA700A8F1 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				71C4241C9BD24CF3A2D78E28 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/scaling_video.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		D54882EC4C0F45E683EA11E5 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				F18257C8732841B098D86D04 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/filtering_audio.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		E4B33C2758F24C4CB6C391AD /* encode_video */ = {
			isa = PBXGroup;
			children = (
				12F414F23D434BF6BF177D59 /* Source Files */,
				79491E2CAC4F4A168400D939 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */,
			);
			name = encode_video;
			sourceTree = "<group>";
		};
		E5287006317644AAAB2EEF1A /* Source Files */ = {
			isa = PBXGroup;
			children = (
				162453E80C96475697D3EABB /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/encode_audio.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		E538D7BFA26F4BA7A8385CF3 = {
			isa = PBXGroup;
			children = (
				86CA6BA31CCE40A784293191 /* avio_list_dir */,
				D121C9C23AB647CCAA44C4DC /* avio_reading */,
				E9BC6AA2F10546E19A70B816 /* decode_audio */,
				91BAF4CBD1BA4E2BBFAF37C1 /* decode_video */,
				0F7EE74363494F21B1274491 /* demuxing_decoding */,
				6FFF10A7F1EE4B099B927CB8 /* encode_audio */,
				E4B33C2758F24C4CB6C391AD /* encode_video */,
				359F915AA0C04C4DBF8DE257 /* extract_mvs */,
				EB79EE2D5B28432EA447E0CA /* filtering_video */,
				9586DFFB80F3499DA948C73C /* filtering_audio */,
				1BDE5AC5C4CF498E9F099DF9 /* http_multiclient */,
				F956C0100B534A18A3768C27 /* hw_decode */,
				8625CA33AE2A4915B733C5B0 /* metadata */,
				BB4E92D573804AD4A052E275 /* muxing */,
				9F7BC0CEFFDD4473AD307929 /* remuxing */,
				8214F4FE39BF4CE789908C6F /* resampling_audio */,
				FF0FBBE546D94A2CAAEB94D6 /* scaling_video */,
				398B24ACF2AE4E7F8CD7AB50 /* transcode_aac */,
				989A376889BC4EA3A638015A /* transcoding */,
				8C13CFDD53164EF6B0EB3DA9 /* ALL_BUILD */,
				21F5ED7FC677490A939F112A /* Products */,
				042647EF8C084785BE2BCFA0 /* Frameworks */,
			);
			sourceTree = "<group>";
		};
		E9BC6AA2F10546E19A70B816 /* decode_audio */ = {
			isa = PBXGroup;
			children = (
				336BDBCA6D534917A2A9D798 /* Source Files */,
				EC852EDE0315421A8A994820 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */,
			);
			name = decode_audio;
			sourceTree = "<group>";
		};
		EB79EE2D5B28432EA447E0CA /* filtering_video */ = {
			isa = PBXGroup;
			children = (
				40F2D25BB0C84C9585E95B34 /* Source Files */,
				2A6DFFBB41FB41C9B3BD360E /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */,
			);
			name = filtering_video;
			sourceTree = "<group>";
		};
		F956C0100B534A18A3768C27 /* hw_decode */ = {
			isa = PBXGroup;
			children = (
				879B1814CC8843B5AB0384B1 /* Source Files */,
				8BAE288A7A3446C4B710C31C /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */,
			);
			name = hw_decode;
			sourceTree = "<group>";
		};
		FC1A98364F65457B8235D422 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				3B783CEF549D453A941C6CD9 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/metadata.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		FF0FBBE546D94A2CAAEB94D6 /* scaling_video */ = {
			isa = PBXGroup;
			children = (
				D2E990D006ED452FA700A8F1 /* Source Files */,
				257490A15AB5414482F983C0 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/CMakeLists.txt */,
			);
			name = scaling_video;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		1124CCCB48DF46DF998C9B60 /* metadata */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 407C350A565C47C18AC43A11 /* Build configuration list for PBXNativeTarget "metadata" */;
			buildPhases = (
				D037485F55EC44F282E21167 /* Sources */,
				6D6B571EA6584C9882234678 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				D29DBEFD4D474642BE3077F9 /* PBXTargetDependency */,
			);
			name = metadata;
			productName = metadata;
			productReference = 4AEC5BFA332B46D7866610EB /* metadata */;
			productType = "com.apple.product-type.tool";
		};
		12391E2E23D34A65B3AAB9B7 /* decode_audio */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 4562AED5DB8E489C8D587AE8 /* Build configuration list for PBXNativeTarget "decode_audio" */;
			buildPhases = (
				332858F6DFAB4FBAB607DAE5 /* Sources */,
				DB4AC7F62CA0472AB7A20330 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				CBA4281A9DB7448EA5A8244F /* PBXTargetDependency */,
			);
			name = decode_audio;
			productName = decode_audio;
			productReference = 67BADD11A3C84EB3AA059B87 /* decode_audio */;
			productType = "com.apple.product-type.tool";
		};
		15D27A4A0FD9440986880926 /* filtering_video */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 814DA8E128C442D091DAA283 /* Build configuration list for PBXNativeTarget "filtering_video" */;
			buildPhases = (
				F2988AC378D847968FC5314C /* Sources */,
				A06504CD15CA4C48A72F7525 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				684C3D9F5B3D41CA99276BE4 /* PBXTargetDependency */,
			);
			name = filtering_video;
			productName = filtering_video;
			productReference = D90447A2DD3C4FFAACC3840C /* filtering_video */;
			productType = "com.apple.product-type.tool";
		};
		20FEBC18EF59403A92F1F0F1 /* resampling_audio */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 4EF16A9D6B134593AC2DF76E /* Build configuration list for PBXNativeTarget "resampling_audio" */;
			buildPhases = (
				C848DD17BD21410E8D9F2927 /* Sources */,
				649B918B83004CC08664C8A9 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				AE30CEAA272F4BA69CC07A2D /* PBXTargetDependency */,
			);
			name = resampling_audio;
			productName = resampling_audio;
			productReference = 3C7DBB8C7F1E48989AC8BD97 /* resampling_audio */;
			productType = "com.apple.product-type.tool";
		};
		353316EBF9A443BE8EC2E6E5 /* transcode_aac */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 9590FA9BD1784230BF5A8AF8 /* Build configuration list for PBXNativeTarget "transcode_aac" */;
			buildPhases = (
				34944CB7E1A5469DBCDA66A3 /* Sources */,
				B75137C27E0F4C5E81B1BA74 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				4800F3616BE74AD2B8F68263 /* PBXTargetDependency */,
			);
			name = transcode_aac;
			productName = transcode_aac;
			productReference = 5AA62716F3C34145890EABB5 /* transcode_aac */;
			productType = "com.apple.product-type.tool";
		};
		5356F437E5F648B8944DA2C3 /* remuxing */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = CDA04E8B86D248F79F55ABE9 /* Build configuration list for PBXNativeTarget "remuxing" */;
			buildPhases = (
				3A6963F7D8DF4797B1A9A0C4 /* Sources */,
				C89EB839807B4C53A8C168E4 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				B4B44142263D45C2BE04D0C4 /* PBXTargetDependency */,
			);
			name = remuxing;
			productName = remuxing;
			productReference = 53EEAE5594AD4139B1B9D25D /* remuxing */;
			productType = "com.apple.product-type.tool";
		};
		645B0AD6798443BF9CCCC00B /* decode_video */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = A0835156D4A44589BAC50894 /* Build configuration list for PBXNativeTarget "decode_video" */;
			buildPhases = (
				D49514076A5D424184B4C6A2 /* Sources */,
				6A60322EB76B444696E0BA2C /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				6C08005CC80548E995E3BC6F /* PBXTargetDependency */,
			);
			name = decode_video;
			productName = decode_video;
			productReference = 80A76A72F7814B969FC6ADD1 /* decode_video */;
			productType = "com.apple.product-type.tool";
		};
		6A13F68E3EAB4B43B1357C87 /* encode_video */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = E5A79EE2D7684A86A9AC2ACD /* Build configuration list for PBXNativeTarget "encode_video" */;
			buildPhases = (
				96E1D0E83538427DA52C6049 /* Sources */,
				944C6646C4E6472AA3237C0A /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				25665611DD4045119970CE56 /* PBXTargetDependency */,
			);
			name = encode_video;
			productName = encode_video;
			productReference = 376EF84079B545B5A6D7F0DF /* encode_video */;
			productType = "com.apple.product-type.tool";
		};
		6D8EE873FA5146C992E3264A /* encode_audio */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = AB761F4451B3492F958FBC58 /* Build configuration list for PBXNativeTarget "encode_audio" */;
			buildPhases = (
				0382284A61684A24ADEB4CF6 /* Sources */,
				3A7416F20752491F929FEA42 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				A584C3CD46594A999A9E56D7 /* PBXTargetDependency */,
			);
			name = encode_audio;
			productName = encode_audio;
			productReference = B294604A468F4BF6ACDA99A1 /* encode_audio */;
			productType = "com.apple.product-type.tool";
		};
		88C3CA03ADA740EDA934A485 /* avio_reading */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 9C73E9B77B5F447A8BA34109 /* Build configuration list for PBXNativeTarget "avio_reading" */;
			buildPhases = (
				10B9F104E12445F9984713D0 /* Sources */,
				0872D150036B4402B8DA7F6A /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				75525C4DDFAC43B682EB82C8 /* PBXTargetDependency */,
			);
			name = avio_reading;
			productName = avio_reading;
			productReference = 09895ECD0A4F424FAFEA5CD1 /* avio_reading */;
			productType = "com.apple.product-type.tool";
		};
		A57F9B52C3E94C6FBF5CC05F /* extract_mvs */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 53F937583FD4468FBF125C18 /* Build configuration list for PBXNativeTarget "extract_mvs" */;
			buildPhases = (
				5C25F680FC7444118A7540D2 /* Sources */,
				E4C4A7E495154D64A3185B53 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				72DE10A9444B4049B230ECC6 /* PBXTargetDependency */,
			);
			name = extract_mvs;
			productName = extract_mvs;
			productReference = 18D3AAA91F5248D380E6BCA4 /* extract_mvs */;
			productType = "com.apple.product-type.tool";
		};
		B4662582EAD54A6A8259067C /* muxing */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = C2B45A678AA449499346E061 /* Build configuration list for PBXNativeTarget "muxing" */;
			buildPhases = (
				8B906FD110C74FE8B59BB1E8 /* Sources */,
				DFE2D17CE7524BB7993D2FA5 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				593C112EB7324163B95BFEB3 /* PBXTargetDependency */,
			);
			name = muxing;
			productName = muxing;
			productReference = F62C4DDB24A341FA97423313 /* muxing */;
			productType = "com.apple.product-type.tool";
		};
		BBEC7D284E3A4952972E7489 /* http_multiclient */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 6090D64C04164CAE94D92538 /* Build configuration list for PBXNativeTarget "http_multiclient" */;
			buildPhases = (
				BDE423EDD6D14F32966EFCD9 /* Sources */,
				AF420043FDD24E258C500CF7 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				0D11C90650B94176907C3943 /* PBXTargetDependency */,
			);
			name = http_multiclient;
			productName = http_multiclient;
			productReference = EC23E7665B71401CB6BC1660 /* http_multiclient */;
			productType = "com.apple.product-type.tool";
		};
		CBDF41E94A5A451E9D3C055F /* transcoding */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 4A086B35069C447383011BD3 /* Build configuration list for PBXNativeTarget "transcoding" */;
			buildPhases = (
				4864375F45E942BCB3D3C504 /* Sources */,
				69374D82890440ADA916F8CD /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				89FF61D7418B45738CA5617C /* PBXTargetDependency */,
			);
			name = transcoding;
			productName = transcoding;
			productReference = 15FB27C0E96C4C46943E5200 /* transcoding */;
			productType = "com.apple.product-type.tool";
		};
		D650E58B68B843FEB7CFCC40 /* filtering_audio */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 9CAF3C13386B445EB69B8067 /* Build configuration list for PBXNativeTarget "filtering_audio" */;
			buildPhases = (
				054C086C77164177A63B60C0 /* Sources */,
				099873E1D1CC46519D0CDE91 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				A96A7FFAE0F94314B9FC9FAF /* PBXTargetDependency */,
			);
			name = filtering_audio;
			productName = filtering_audio;
			productReference = 68CBCAE6E2824D77A34C9852 /* filtering_audio */;
			productType = "com.apple.product-type.tool";
		};
		DB390A0757F744A4BA8217B6 /* demuxing_decoding */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 435E973F90CC4D04B58F482A /* Build configuration list for PBXNativeTarget "demuxing_decoding" */;
			buildPhases = (
				02B98EA8622D456A84827C5C /* Sources */,
				E4FEAA30B3574FAA92EDC421 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				5C018CAA4F1F45058D1A3877 /* PBXTargetDependency */,
			);
			name = demuxing_decoding;
			productName = demuxing_decoding;
			productReference = 9B80D18456F44E028DDA850D /* demuxing_decoding */;
			productType = "com.apple.product-type.tool";
		};
		F60828D8F52E4325A283D236 /* scaling_video */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 9462DDCD47DE44019BD8C226 /* Build configuration list for PBXNativeTarget "scaling_video" */;
			buildPhases = (
				EBD4D994F72B422B9D47C4DE /* Sources */,
				3D7D614CBF2B4FFB9DFE9404 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				E449B0FEE2444C01B4C1BFB7 /* PBXTargetDependency */,
			);
			name = scaling_video;
			productName = scaling_video;
			productReference = 5808391935264AEA9D90C14F /* scaling_video */;
			productType = "com.apple.product-type.tool";
		};
		F8099AADAB7C4D33BCCDC50B /* avio_list_dir */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 842338BB4D6649AFB5961E3C /* Build configuration list for PBXNativeTarget "avio_list_dir" */;
			buildPhases = (
				CC3ECCE684914BDCA39E6110 /* Sources */,
				3F16EA2FEF634888A713F605 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				AA9179DA5F8F4CD488C987A8 /* PBXTargetDependency */,
			);
			name = avio_list_dir;
			productName = avio_list_dir;
			productReference = 3CDF8FD690B74881ABBEB521 /* avio_list_dir */;
			productType = "com.apple.product-type.tool";
		};
		FBE7071C2E6946B78CAFD898 /* hw_decode */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 57EF060720DF432B8ED78E14 /* Build configuration list for PBXNativeTarget "hw_decode" */;
			buildPhases = (
				8DE3DC7C630F40EBBAA1521F /* Sources */,
				F6C39CAC643743589F0E6C97 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				3F9F9E8990B54811B7A33111 /* PBXTargetDependency */,
			);
			name = hw_decode;
			productName = hw_decode;
			productReference = C2FA11C1A9E04FD49FDFA7B1 /* hw_decode */;
			productType = "com.apple.product-type.tool";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		B5A4A51868A34AD884CE72DA /* Project object */ = {
			isa = PBXProject;
			attributes = {
				BuildIndependentTargetsInParallel = YES;
				LastUpgradeCheck = 1250;
			};
			buildConfigurationList = C69F79B8E10E4600BC406FA2 /* Build configuration list for PBXProject "FFmpegExamples" */;
			buildSettings = {
			};
			buildStyles = (
				73A77E2A81EA441AA2724D58 /* Debug */,
				CAFD538E262B4B09A51E6C13 /* Release */,
				755BD0669CDF441DA71C6B71 /* MinSizeRel */,
				ADCF4B9AABBD49008DF40C58 /* RelWithDebInfo */,
			);
			compatibilityVersion = "Xcode 3.2";
			hasScannedForEncodings = 0;
			mainGroup = E538D7BFA26F4BA7A8385CF3;
			projectDirPath = ../;
			projectRoot = "";
			targets = (
				F5CFF8E41CD341F7992A74D2 /* ALL_BUILD */,
				633E8400CB624581848F9F28 /* ZERO_CHECK */,
				F8099AADAB7C4D33BCCDC50B /* avio_list_dir */,
				88C3CA03ADA740EDA934A485 /* avio_reading */,
				12391E2E23D34A65B3AAB9B7 /* decode_audio */,
				645B0AD6798443BF9CCCC00B /* decode_video */,
				DB390A0757F744A4BA8217B6 /* demuxing_decoding */,
				6D8EE873FA5146C992E3264A /* encode_audio */,
				6A13F68E3EAB4B43B1357C87 /* encode_video */,
				A57F9B52C3E94C6FBF5CC05F /* extract_mvs */,
				D650E58B68B843FEB7CFCC40 /* filtering_audio */,
				15D27A4A0FD9440986880926 /* filtering_video */,
				BBEC7D284E3A4952972E7489 /* http_multiclient */,
				FBE7071C2E6946B78CAFD898 /* hw_decode */,
				1124CCCB48DF46DF998C9B60 /* metadata */,
				B4662582EAD54A6A8259067C /* muxing */,
				5356F437E5F648B8944DA2C3 /* remuxing */,
				20FEBC18EF59403A92F1F0F1 /* resampling_audio */,
				F60828D8F52E4325A283D236 /* scaling_video */,
				353316EBF9A443BE8EC2E6E5 /* transcode_aac */,
				CBDF41E94A5A451E9D3C055F /* transcoding */,
			);
		};
/* End PBXProject section */

/* Begin PBXShellScriptBuildPhase section */
		3C0110FC8322DE7E50886E21 = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
		3FA5C55E7AB6A4F27FFF4789 /* Generate CMakeFiles/ZERO_CHECK */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Generate CMakeFiles/ZERO_CHECK";
			outputPaths = (
/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode/CMakeFiles/ZERO_CHECK			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode
  make -f /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode/CMakeScripts/ReRunCMake.make
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode
  make -f /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode/CMakeScripts/ReRunCMake.make
fi
if test \"$CONFIGURATION\" = \"MinSizeRel\"; then :
  cd /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode
  make -f /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode/CMakeScripts/ReRunCMake.make
fi
if test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :
  cd /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode
  make -f /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode/CMakeScripts/ReRunCMake.make
fi
";
			showEnvVarsInLog = 0;
		};
		5774497EBB9268464D1D427F /* Generate CMakeFiles/ALL_BUILD */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Generate CMakeFiles/ALL_BUILD";
			outputPaths = (
/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode/CMakeFiles/ALL_BUILD			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e
if test \"$CONFIGURATION\" = \"Debug\"; then :
  cd /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode
  echo Build\\ all\\ projects
fi
if test \"$CONFIGURATION\" = \"Release\"; then :
  cd /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode
  echo Build\\ all\\ projects
fi
if test \"$CONFIGURATION\" = \"MinSizeRel\"; then :
  cd /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode
  echo Build\\ all\\ projects
fi
if test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :
  cd /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode
  echo Build\\ all\\ projects
fi
";
			showEnvVarsInLog = 0;
		};
		9B50530E35CC49C82C2FACCF = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# shell script goes here
exit 0";
			showEnvVarsInLog = 0;
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		02B98EA8622D456A84827C5C /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				CBCD133F38DE4EA1B030B32A /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/demuxing_decoding.c */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		0382284A61684A24ADEB4CF6 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				2B1435E86E2848328F7A0C01 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/encode_audio.c */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		054C086C77164177A63B60C0 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				2CA9569C225945CF9E3C748F /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/filtering_audio.c */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		10B9F104E12445F9984713D0 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				B9F0AFA341D445FD8D67349B /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/avio_reading.c */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		332858F6DFAB4FBAB607DAE5 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				5ED7FF768C094483BEABDA6C /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/decode_audio.c */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		34944CB7E1A5469DBCDA66A3 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				0EF35612B09146D4809F6E16 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/transcode_aac.c */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		3A6963F7D8DF4797B1A9A0C4 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				548CE6E651AB4D6F9905DA7B /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/remuxing.c */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		4864375F45E942BCB3D3C504 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				A09778C5666E4ED9ADC3FDEE /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/transcoding.c */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		5C25F680FC7444118A7540D2 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				ADC9C4AE126942E4BEE2383D /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/extract_mvs.c */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		8B906FD110C74FE8B59BB1E8 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				843B496C43A244EBA237E609 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/muxing.c */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		8DE3DC7C630F40EBBAA1521F /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				4D683C89AD314076853CA7A4 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/hw_decode.c */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		96E1D0E83538427DA52C6049 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				B81C9F002834433083B27815 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/encode_video.c */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		BDE423EDD6D14F32966EFCD9 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				3705866C4D794854855349D0 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/http_multiclient.c */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		C848DD17BD21410E8D9F2927 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				7477AEB2DF7A4854A64CDD0F /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/resampling_audio.c */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		CC3ECCE684914BDCA39E6110 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				21A1CBAAFA794555A677BD2A /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/avio_list_dir.c */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		D037485F55EC44F282E21167 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				FCCE4F4F8A86485AA228D88F /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/metadata.c */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		D49514076A5D424184B4C6A2 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				02132C412A0A490FBD704341 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/decode_video.c */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		EBD4D994F72B422B9D47C4DE /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				B4F5F7D1350047009578299E /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/scaling_video.c */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		F2988AC378D847968FC5314C /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				742C26515A25420AAA5C0AD9 /* /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/filtering_video.c */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		0D11C90650B94176907C3943 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 633E8400CB624581848F9F28 /* ZERO_CHECK */;
			targetProxy = B424CBFEF45642EEB30DBF01 /* PBXContainerItemProxy */;
		};
		2149D7E1D19A4F10AD656E35 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = A57F9B52C3E94C6FBF5CC05F /* extract_mvs */;
			targetProxy = 96E46B483B884F31AFF35952 /* PBXContainerItemProxy */;
		};
		23BA07D6AEE448DD82B6471E /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = CBDF41E94A5A451E9D3C055F /* transcoding */;
			targetProxy = 6183C1F61C51461686207F47 /* PBXContainerItemProxy */;
		};
		25665611DD4045119970CE56 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 633E8400CB624581848F9F28 /* ZERO_CHECK */;
			targetProxy = 4BE3BABA19AF49A9863AD838 /* PBXContainerItemProxy */;
		};
		3577711AB52E4757BD31EAE3 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 15D27A4A0FD9440986880926 /* filtering_video */;
			targetProxy = 95939271FB674B4086A9AD7C /* PBXContainerItemProxy */;
		};
		3F9F9E8990B54811B7A33111 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 633E8400CB624581848F9F28 /* ZERO_CHECK */;
			targetProxy = C020A487FF62443599E7201B /* PBXContainerItemProxy */;
		};
		42D4D8F2BEC3424E84118CF6 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = DB390A0757F744A4BA8217B6 /* demuxing_decoding */;
			targetProxy = AF1971C69C6A418B81474728 /* PBXContainerItemProxy */;
		};
		4800F3616BE74AD2B8F68263 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 633E8400CB624581848F9F28 /* ZERO_CHECK */;
			targetProxy = E6311F93FCE645B2A24C9457 /* PBXContainerItemProxy */;
		};
		4B21F7CA71C344BDA0AF091A /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 6A13F68E3EAB4B43B1357C87 /* encode_video */;
			targetProxy = D1D91B2FFF5946DE9AD1F94D /* PBXContainerItemProxy */;
		};
		4D95C7D53017480B954704D9 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = BBEC7D284E3A4952972E7489 /* http_multiclient */;
			targetProxy = AFC69B33289A496EA140037B /* PBXContainerItemProxy */;
		};
		593C112EB7324163B95BFEB3 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 633E8400CB624581848F9F28 /* ZERO_CHECK */;
			targetProxy = DF76266B03AE4AF0839E3D94 /* PBXContainerItemProxy */;
		};
		5C018CAA4F1F45058D1A3877 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 633E8400CB624581848F9F28 /* ZERO_CHECK */;
			targetProxy = FDF7C3CA797D43C195BFEBE4 /* PBXContainerItemProxy */;
		};
		648D2B600A9A43C6A11F86A7 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 6D8EE873FA5146C992E3264A /* encode_audio */;
			targetProxy = B90D115676EC431A92BB21DE /* PBXContainerItemProxy */;
		};
		684C3D9F5B3D41CA99276BE4 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 633E8400CB624581848F9F28 /* ZERO_CHECK */;
			targetProxy = 2A47EE1D56F6442BB37DEB0A /* PBXContainerItemProxy */;
		};
		6C08005CC80548E995E3BC6F /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 633E8400CB624581848F9F28 /* ZERO_CHECK */;
			targetProxy = DEC3A7A3DF9443E995F8D9F9 /* PBXContainerItemProxy */;
		};
		72DE10A9444B4049B230ECC6 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 633E8400CB624581848F9F28 /* ZERO_CHECK */;
			targetProxy = B807FFB298D14DC9BDD6211B /* PBXContainerItemProxy */;
		};
		75525C4DDFAC43B682EB82C8 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 633E8400CB624581848F9F28 /* ZERO_CHECK */;
			targetProxy = B094619A5B164DC4B73598E7 /* PBXContainerItemProxy */;
		};
		7ABB3BC7088940D491CA0227 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D650E58B68B843FEB7CFCC40 /* filtering_audio */;
			targetProxy = 876848099A7441598A58D2C0 /* PBXContainerItemProxy */;
		};
		7F68AEBDBBFA4F98AD35F289 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = FBE7071C2E6946B78CAFD898 /* hw_decode */;
			targetProxy = 56D48A615B74458A9816D88B /* PBXContainerItemProxy */;
		};
		8144B331AFE047B3A6929256 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = F60828D8F52E4325A283D236 /* scaling_video */;
			targetProxy = 406FAE744C9A46C38BFE2E41 /* PBXContainerItemProxy */;
		};
		86A3AC5BE3444681ABD13B7C /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 12391E2E23D34A65B3AAB9B7 /* decode_audio */;
			targetProxy = 201AD87087E8462D9C2474D6 /* PBXContainerItemProxy */;
		};
		87C38CE1F3FE4B65AF6AF1F5 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 353316EBF9A443BE8EC2E6E5 /* transcode_aac */;
			targetProxy = BA737CB77BFA405B9D7D4E61 /* PBXContainerItemProxy */;
		};
		89FF61D7418B45738CA5617C /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 633E8400CB624581848F9F28 /* ZERO_CHECK */;
			targetProxy = D58762D61AFA4668B66E3B5D /* PBXContainerItemProxy */;
		};
		8F60B194B6BF495CA36640F0 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 633E8400CB624581848F9F28 /* ZERO_CHECK */;
			targetProxy = A90805B800B646B19FD76C2A /* PBXContainerItemProxy */;
		};
		A2ADB30C95764610872F7D1C /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 88C3CA03ADA740EDA934A485 /* avio_reading */;
			targetProxy = 246BD094CFAA425AB875C143 /* PBXContainerItemProxy */;
		};
		A584C3CD46594A999A9E56D7 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 633E8400CB624581848F9F28 /* ZERO_CHECK */;
			targetProxy = 28FE2D94ACC14C9698284DD8 /* PBXContainerItemProxy */;
		};
		A8C6BB6F3B42459CB65B4D98 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 20FEBC18EF59403A92F1F0F1 /* resampling_audio */;
			targetProxy = E34AB3BAECF14A60A39EC21E /* PBXContainerItemProxy */;
		};
		A96A7FFAE0F94314B9FC9FAF /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 633E8400CB624581848F9F28 /* ZERO_CHECK */;
			targetProxy = 9E4A18BBE1D1430EB59BD526 /* PBXContainerItemProxy */;
		};
		AA9179DA5F8F4CD488C987A8 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 633E8400CB624581848F9F28 /* ZERO_CHECK */;
			targetProxy = 0E267319741C4A0589E8DBC3 /* PBXContainerItemProxy */;
		};
		AC55578AAC344AA491225EC0 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 1124CCCB48DF46DF998C9B60 /* metadata */;
			targetProxy = B236FB61386A45CDA80CB7D6 /* PBXContainerItemProxy */;
		};
		AE30CEAA272F4BA69CC07A2D /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 633E8400CB624581848F9F28 /* ZERO_CHECK */;
			targetProxy = 7E2800272B3D40F1AD3631B8 /* PBXContainerItemProxy */;
		};
		B34C1EAB90674678A20073A7 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 645B0AD6798443BF9CCCC00B /* decode_video */;
			targetProxy = 0D2A10577434418991207AAE /* PBXContainerItemProxy */;
		};
		B4B44142263D45C2BE04D0C4 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 633E8400CB624581848F9F28 /* ZERO_CHECK */;
			targetProxy = 94E6F7DAFDCC48D982F80D7E /* PBXContainerItemProxy */;
		};
		C5AA3F1096D445F3A102B5BA /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = F8099AADAB7C4D33BCCDC50B /* avio_list_dir */;
			targetProxy = A8C5DE9973EA4F18B50112C6 /* PBXContainerItemProxy */;
		};
		CBA4281A9DB7448EA5A8244F /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 633E8400CB624581848F9F28 /* ZERO_CHECK */;
			targetProxy = E0EC84CB2BBA46098DB628E4 /* PBXContainerItemProxy */;
		};
		D29DBEFD4D474642BE3077F9 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 633E8400CB624581848F9F28 /* ZERO_CHECK */;
			targetProxy = 9B72354DE3104464A9EF0ED6 /* PBXContainerItemProxy */;
		};
		E449B0FEE2444C01B4C1BFB7 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 633E8400CB624581848F9F28 /* ZERO_CHECK */;
			targetProxy = 87AF42C67B6148CE97CBE87C /* PBXContainerItemProxy */;
		};
		FA52D216D089462DB6C64ADC /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 5356F437E5F648B8944DA2C3 /* remuxing */;
			targetProxy = CACDDF4F78DF47D882BFA1EF /* PBXContainerItemProxy */;
		};
		FC6139FEF36C45F98D5172C5 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = B4662582EAD54A6A8259067C /* muxing */;
			targetProxy = 27E30C9E3DD84B3E95872A21 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		029FCE9F618C4DB0A7A5C2A9 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/avio_reading;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("    -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = avio_reading;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		03CF57A86B9E420992BCFE44 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/muxing/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("    -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = muxing;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = MinSizeRel;
		};
		05CEA3F85E8341B9B0431D77 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/resampling_audio/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("    -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = resampling_audio;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = MinSizeRel;
		};
		086377118EEF4B70A2180AE1 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				OTHER_LDFLAGS = ("","$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		08BF93257F094AB1A7B754B4 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/avio_reading/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("       -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = avio_reading;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = RelWithDebInfo;
		};
		0B2C4BEDC00941AEBCE1009E /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/demuxing_decoding/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("       -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = demuxing_decoding;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = RelWithDebInfo;
		};
		0BA5C6DB7E1B4A4A845FE6A0 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/encode_audio/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("       -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = encode_audio;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = RelWithDebInfo;
		};
		0F135224CE30471B8C589600 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				OTHER_LDFLAGS = ("","$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = MinSizeRel;
		};
		134ABBAEBF2D4DB49DD2C48C /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/transcoding/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("    -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = transcoding;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = MinSizeRel;
		};
		13CC56A12F6B4AD3BBF8FE1C /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = "$(NATIVE_ARCH_ACTUAL)";
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.3.sdk;
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode/build;
			};
			name = Release;
		};
		16019C6E00F5418E807EBC31 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/extract_mvs;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("   ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = extract_mvs;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		174D1B0E5FC94E0490EFD48A /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/encode_video;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("    -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = encode_video;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		17F2CD40D1F04838A06341E1 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/extract_mvs/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("       -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = extract_mvs;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = RelWithDebInfo;
		};
		1EB4C2B0860E434C849B2A5C /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/avio_list_dir;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("    -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = avio_list_dir;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		1F8031E2567F491199D68ED1 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/http_multiclient/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("    -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = http_multiclient;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = MinSizeRel;
		};
		2117D55E39EE48B68A0C3FB3 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/transcode_aac;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("   ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = transcode_aac;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		23E569045F744970ABCF5276 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/filtering_video;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("   ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = filtering_video;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		252D8CBA4ED74F6592F2878B /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/metadata/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("    -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = metadata;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = MinSizeRel;
		};
		266935C3620C42CBA6F35AB3 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/decode_video;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("   ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = decode_video;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		27C7E46344754FB593CB4D18 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/avio_list_dir;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("   ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = avio_list_dir;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		29B8F50E196841DF891F42B6 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/scaling_video/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("    -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = scaling_video;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = MinSizeRel;
		};
		30FAC202568E4E5C9FF26F65 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/transcoding;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("    -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = transcoding;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		3267B5B1AAFD42F7B410E1B9 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/decode_video/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("    -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = decode_video;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = MinSizeRel;
		};
		32C552BF96084E86B477113E /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/filtering_audio/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("    -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = filtering_audio;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = MinSizeRel;
		};
		399D3E0666AA4454A58AB335 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/hw_decode;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("   ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = hw_decode;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		3D4ED938B06B445583735680 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/hw_decode/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("    -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = hw_decode;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = MinSizeRel;
		};
		45363D34FAB54DDC80955B13 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/muxing;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("    -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = muxing;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		45D0D6F609E44CF99B975010 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				OTHER_LDFLAGS = ("","$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = RelWithDebInfo;
		};
		46F18B48C153482498663FA3 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/remuxing/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("       -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = remuxing;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = RelWithDebInfo;
		};
		4DDDA1F04F8B4C6A9A838320 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/hw_decode/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("       -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = hw_decode;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = RelWithDebInfo;
		};
		4F4100242BCF485FB298382E /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/demuxing_decoding;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("    -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = demuxing_decoding;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		502275894699437998397D01 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = "$(NATIVE_ARCH_ACTUAL)";
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.3.sdk;
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode/build;
			};
			name = Debug;
		};
		50B06034BFFE4E3EA036467D /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/scaling_video;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("    -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = scaling_video;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		53495FFCF1E44BF5B2114513 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/decode_audio;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("    -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = decode_audio;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		5849052D36F84D1B9E6F82D2 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/metadata;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("   ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = metadata;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		5CEAD19E6A504FF8B1393931 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/extract_mvs/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("    -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = extract_mvs;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = MinSizeRel;
		};
		5ED1E88E12CA44A299993ADA /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/decode_audio/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("    -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = decode_audio;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = MinSizeRel;
		};
		6038A601F48249979F92D07E /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				OTHER_LDFLAGS = ("","$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		65FD6F6E526C4863AF6B38CF /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/demuxing_decoding/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("    -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = demuxing_decoding;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = MinSizeRel;
		};
		6C245536C4874663A975C9A9 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/encode_video;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("   ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = encode_video;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		6D29B3DC2AED42FFA5BC8BA6 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/encode_video/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("    -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = encode_video;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = MinSizeRel;
		};
		6EB3FF5E6B734239A281E13F /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/transcode_aac/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("    -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = transcode_aac;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = MinSizeRel;
		};
		6F46E59CC22B4CB197725867 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/remuxing;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("   ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = remuxing;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		727B4A79E8414A0394F871E0 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/scaling_video;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("   ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = scaling_video;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		77265F07EC614D2EA387C8F2 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/decode_audio/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("       -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = decode_audio;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = RelWithDebInfo;
		};
		7BAF8C5E439E4D3B99360ACF /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/transcode_aac;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("    -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = transcode_aac;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		7F21E3E5E7A1492BA0A4E753 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/muxing/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("       -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = muxing;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = RelWithDebInfo;
		};
		81A60A346B11421EAF7D9F34 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/remuxing/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("    -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = remuxing;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = MinSizeRel;
		};
		8A895B484BA54C3CB04607EA /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/extract_mvs;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("    -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = extract_mvs;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		8D63E0B61C0F466C8CB58289 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/resampling_audio;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("    -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = resampling_audio;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		910E781DAA8B4E37AFBB74CA /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/demuxing_decoding;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("   ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = demuxing_decoding;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		9597616FF0334906B6AC700C /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/resampling_audio;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("   ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = resampling_audio;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		98ABB343807949B588DB3C62 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/encode_audio/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("    -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = encode_audio;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = MinSizeRel;
		};
		99BC41652E5E4E9EBEC4A5A7 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/avio_reading;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("   ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = avio_reading;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		9A765E5B773C4B3D9B2542F8 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/resampling_audio/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("       -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = resampling_audio;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = RelWithDebInfo;
		};
		9BD84C4B7AF342519250D090 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/transcoding;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("   ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = transcoding;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		9E231792A1794B34AC37C2ED /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/filtering_audio;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("    -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = filtering_audio;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		9F7B61C3B0F7488CB41204E9 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/decode_video;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("    -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = decode_video;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		A158536BB97E4D1CAC051797 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/scaling_video/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("       -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = scaling_video;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = RelWithDebInfo;
		};
		ABCF7B1D093A4ECB937CF2EF /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = "$(NATIVE_ARCH_ACTUAL)";
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.3.sdk;
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode/build;
			};
			name = RelWithDebInfo;
		};
		B06B20F8DD434996AC73ABC9 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/filtering_video/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("       -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = filtering_video;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = RelWithDebInfo;
		};
		B394520CBE634F1E98814144 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/avio_reading/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("    -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = avio_reading;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = MinSizeRel;
		};
		B5AFCB882F1A4BF7A82E4BC2 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/avio_list_dir/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("       -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = avio_list_dir;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = RelWithDebInfo;
		};
		B8DD1878DAA54225A7D41102 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				OTHER_LDFLAGS = ("","$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		BAB3B8DB48484EB38B2524AF /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/muxing;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("   ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = muxing;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		C27984E8CE8E4609A3EF17FD /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/decode_video/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("       -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = decode_video;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = RelWithDebInfo;
		};
		C44FD3B23E5F4ED989843079 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/filtering_audio/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("       -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = filtering_audio;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = RelWithDebInfo;
		};
		C58121FE4F0D4273B837E2E2 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				OTHER_LDFLAGS = ("","$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = RelWithDebInfo;
		};
		C6AEB43887BF4F6FA3CE9663 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/decode_audio;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("   ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = decode_audio;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		C75EE33B0CB64684A73A9E70 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/transcoding/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("       -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = transcoding;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = RelWithDebInfo;
		};
		C975DB48DD2B45D1BD61CC43 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/encode_video/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("       -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = encode_video;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = RelWithDebInfo;
		};
		D17FD3B3D33E4ED39F1D44C6 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/filtering_video/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("    -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = filtering_video;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = MinSizeRel;
		};
		D1C38B47B019481A8415307E /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/http_multiclient/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("       -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = http_multiclient;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = RelWithDebInfo;
		};
		D39B1DC34A9D4FEFBF4BD009 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/hw_decode;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("    -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = hw_decode;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		D55123E590F942E98BD8F8CA /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/remuxing;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("    -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = remuxing;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		DB2FCC6FB9C1437CACA5A1B7 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/encode_audio;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("    -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = encode_audio;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		DBC6DF1C42BD408BAE7748A8 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				OTHER_LDFLAGS = ("","$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = MinSizeRel;
		};
		DEF869CAA56347C188AF988D /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/transcode_aac/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("       -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = transcode_aac;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = RelWithDebInfo;
		};
		DFA936430C734B8FA43DDD2B /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/filtering_audio;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("   ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = filtering_audio;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		E1A2C17CDC4C491E84616DBC /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/metadata/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("       -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = metadata;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = RelWithDebInfo;
		};
		E2DA89CA5AAB40DDB81F54C0 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/avio_list_dir/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("    -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = avio_list_dir;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = MinSizeRel;
		};
		E6A075E55D1C4A6580CBAC72 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/encode_audio;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("   ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = encode_audio;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		E8F22264C13A473BB0B26788 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/metadata;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("    -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = metadata;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		ED748A20287F4B0795F9EE19 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/http_multiclient;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("    -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = http_multiclient;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		EE61470E019F493A98B2D8B0 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/filtering_video;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("    -DNDEBUG ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = filtering_video;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Release;
		};
		EF34502D86A8474B89F8765E /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/http_multiclient;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (/System/Library/Frameworks,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,"$(inherited)");
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (/usr/local/lib,"$(inherited)");
				LIBRARY_SEARCH_PATHS = ("/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",/usr/local/lib,"$(inherited)");
				OTHER_CFLAGS = ("   ","$(inherited)");
				OTHER_LDFLAGS = (" -Wl,-search_paths_first -Wl,-headerpad_max_install_names",/usr/local/lib/libavdevice.dylib,/usr/local/lib/libavformat.dylib,/usr/local/lib/libavfilter.dylib,/usr/local/lib/libavcodec.dylib,/usr/local/lib/libswresample.dylib,/usr/local/lib/libswscale.dylib,/usr/local/lib/libavutil.dylib,"$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = http_multiclient;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		FB71877BDAEB404F9CFEB9E7 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'","$(inherited)");
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				OTHER_LDFLAGS = ("","$(inherited)");
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = ("$(inherited)");
			};
			name = Debug;
		};
		FB805CCAD63946A0B95D7F3A /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = "$(NATIVE_ARCH_ACTUAL)";
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.3.sdk;
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode/build;
			};
			name = MinSizeRel;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		407C350A565C47C18AC43A11 /* Build configuration list for PBXNativeTarget "metadata" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				5849052D36F84D1B9E6F82D2 /* Debug */,
				E8F22264C13A473BB0B26788 /* Release */,
				252D8CBA4ED74F6592F2878B /* MinSizeRel */,
				E1A2C17CDC4C491E84616DBC /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		435E973F90CC4D04B58F482A /* Build configuration list for PBXNativeTarget "demuxing_decoding" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				910E781DAA8B4E37AFBB74CA /* Debug */,
				4F4100242BCF485FB298382E /* Release */,
				65FD6F6E526C4863AF6B38CF /* MinSizeRel */,
				0B2C4BEDC00941AEBCE1009E /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		4562AED5DB8E489C8D587AE8 /* Build configuration list for PBXNativeTarget "decode_audio" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				C6AEB43887BF4F6FA3CE9663 /* Debug */,
				53495FFCF1E44BF5B2114513 /* Release */,
				5ED1E88E12CA44A299993ADA /* MinSizeRel */,
				77265F07EC614D2EA387C8F2 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		4A086B35069C447383011BD3 /* Build configuration list for PBXNativeTarget "transcoding" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				9BD84C4B7AF342519250D090 /* Debug */,
				30FAC202568E4E5C9FF26F65 /* Release */,
				134ABBAEBF2D4DB49DD2C48C /* MinSizeRel */,
				C75EE33B0CB64684A73A9E70 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		4EF16A9D6B134593AC2DF76E /* Build configuration list for PBXNativeTarget "resampling_audio" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				9597616FF0334906B6AC700C /* Debug */,
				8D63E0B61C0F466C8CB58289 /* Release */,
				05CEA3F85E8341B9B0431D77 /* MinSizeRel */,
				9A765E5B773C4B3D9B2542F8 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		53F937583FD4468FBF125C18 /* Build configuration list for PBXNativeTarget "extract_mvs" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				16019C6E00F5418E807EBC31 /* Debug */,
				8A895B484BA54C3CB04607EA /* Release */,
				5CEAD19E6A504FF8B1393931 /* MinSizeRel */,
				17F2CD40D1F04838A06341E1 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		57EF060720DF432B8ED78E14 /* Build configuration list for PBXNativeTarget "hw_decode" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				399D3E0666AA4454A58AB335 /* Debug */,
				D39B1DC34A9D4FEFBF4BD009 /* Release */,
				3D4ED938B06B445583735680 /* MinSizeRel */,
				4DDDA1F04F8B4C6A9A838320 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		6090D64C04164CAE94D92538 /* Build configuration list for PBXNativeTarget "http_multiclient" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				EF34502D86A8474B89F8765E /* Debug */,
				ED748A20287F4B0795F9EE19 /* Release */,
				1F8031E2567F491199D68ED1 /* MinSizeRel */,
				D1C38B47B019481A8415307E /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		814DA8E128C442D091DAA283 /* Build configuration list for PBXNativeTarget "filtering_video" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				23E569045F744970ABCF5276 /* Debug */,
				EE61470E019F493A98B2D8B0 /* Release */,
				D17FD3B3D33E4ED39F1D44C6 /* MinSizeRel */,
				B06B20F8DD434996AC73ABC9 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		842338BB4D6649AFB5961E3C /* Build configuration list for PBXNativeTarget "avio_list_dir" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				27C7E46344754FB593CB4D18 /* Debug */,
				1EB4C2B0860E434C849B2A5C /* Release */,
				E2DA89CA5AAB40DDB81F54C0 /* MinSizeRel */,
				B5AFCB882F1A4BF7A82E4BC2 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		8C4D297CB2F04F67BA48120B /* Build configuration list for PBXAggregateTarget "ZERO_CHECK" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				B8DD1878DAA54225A7D41102 /* Debug */,
				6038A601F48249979F92D07E /* Release */,
				DBC6DF1C42BD408BAE7748A8 /* MinSizeRel */,
				45D0D6F609E44CF99B975010 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		9462DDCD47DE44019BD8C226 /* Build configuration list for PBXNativeTarget "scaling_video" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				727B4A79E8414A0394F871E0 /* Debug */,
				50B06034BFFE4E3EA036467D /* Release */,
				29B8F50E196841DF891F42B6 /* MinSizeRel */,
				A158536BB97E4D1CAC051797 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		9590FA9BD1784230BF5A8AF8 /* Build configuration list for PBXNativeTarget "transcode_aac" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2117D55E39EE48B68A0C3FB3 /* Debug */,
				7BAF8C5E439E4D3B99360ACF /* Release */,
				6EB3FF5E6B734239A281E13F /* MinSizeRel */,
				DEF869CAA56347C188AF988D /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		9C73E9B77B5F447A8BA34109 /* Build configuration list for PBXNativeTarget "avio_reading" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				99BC41652E5E4E9EBEC4A5A7 /* Debug */,
				029FCE9F618C4DB0A7A5C2A9 /* Release */,
				B394520CBE634F1E98814144 /* MinSizeRel */,
				08BF93257F094AB1A7B754B4 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		9CAF3C13386B445EB69B8067 /* Build configuration list for PBXNativeTarget "filtering_audio" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				DFA936430C734B8FA43DDD2B /* Debug */,
				9E231792A1794B34AC37C2ED /* Release */,
				32C552BF96084E86B477113E /* MinSizeRel */,
				C44FD3B23E5F4ED989843079 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		A0835156D4A44589BAC50894 /* Build configuration list for PBXNativeTarget "decode_video" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				266935C3620C42CBA6F35AB3 /* Debug */,
				9F7B61C3B0F7488CB41204E9 /* Release */,
				3267B5B1AAFD42F7B410E1B9 /* MinSizeRel */,
				C27984E8CE8E4609A3EF17FD /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		AB761F4451B3492F958FBC58 /* Build configuration list for PBXNativeTarget "encode_audio" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				E6A075E55D1C4A6580CBAC72 /* Debug */,
				DB2FCC6FB9C1437CACA5A1B7 /* Release */,
				98ABB343807949B588DB3C62 /* MinSizeRel */,
				0BA5C6DB7E1B4A4A845FE6A0 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		C2B45A678AA449499346E061 /* Build configuration list for PBXNativeTarget "muxing" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				BAB3B8DB48484EB38B2524AF /* Debug */,
				45363D34FAB54DDC80955B13 /* Release */,
				03CF57A86B9E420992BCFE44 /* MinSizeRel */,
				7F21E3E5E7A1492BA0A4E753 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		C48164559A404C5BB0B9BDCE /* Build configuration list for PBXAggregateTarget "ALL_BUILD" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				FB71877BDAEB404F9CFEB9E7 /* Debug */,
				086377118EEF4B70A2180AE1 /* Release */,
				0F135224CE30471B8C589600 /* MinSizeRel */,
				C58121FE4F0D4273B837E2E2 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		C69F79B8E10E4600BC406FA2 /* Build configuration list for PBXProject "FFmpegExamples" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				502275894699437998397D01 /* Debug */,
				13CC56A12F6B4AD3BBF8FE1C /* Release */,
				FB805CCAD63946A0B95D7F3A /* MinSizeRel */,
				ABCF7B1D093A4ECB937CF2EF /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		CDA04E8B86D248F79F55ABE9 /* Build configuration list for PBXNativeTarget "remuxing" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				6F46E59CC22B4CB197725867 /* Debug */,
				D55123E590F942E98BD8F8CA /* Release */,
				81A60A346B11421EAF7D9F34 /* MinSizeRel */,
				46F18B48C153482498663FA3 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		E5A79EE2D7684A86A9AC2ACD /* Build configuration list for PBXNativeTarget "encode_video" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				6C245536C4874663A975C9A9 /* Debug */,
				174D1B0E5FC94E0490EFD48A /* Release */,
				6D29B3DC2AED42FFA5BC8BA6 /* MinSizeRel */,
				C975DB48DD2B45D1BD61CC43 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
/* End XCConfigurationList section */
	};
	rootObject = B5A4A51868A34AD884CE72DA /* Project object */;
}
