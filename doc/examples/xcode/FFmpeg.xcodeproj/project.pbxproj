// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 54;
	objects = {

/* Begin PBXAggregateTarget section */
		868C2A9636AF4582B430AA73 /* ALL_BUILD */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 166E0215B72749ADA10376F0 /* Build configuration list for PBXAggregateTarget "ALL_BUILD" */;
			buildPhases = (
				5774497EBB9268464D1D427F /* Generate CMakeFiles/ALL_BUILD */,
			);
			dependencies = (
				6C721895F5F9450197287A5B /* PBXTargetDependency */,
				E24B3DA9B8304A7AB30540C0 /* PBXTargetDependency */,
				B276C79D8E594B64AD93CF3B /* PBXTargetDependency */,
				E0E4E0F8894144DDA2607BCD /* PBXTargetDependency */,
				FC21E08646EB4AB8A97F3A2B /* PBXTargetDependency */,
				63E9293C80354ADF935CD25C /* PBXTargetDependency */,
				6103A1367D894B72A75FA11B /* PBXTargetDependency */,
				DE15BC90A3C54A4CAA8E2B7B /* PBXTargetDependency */,
				67CD1F3527594EE89D7FF645 /* PBXTargetDependency */,
				9244E10E53CC499D95845752 /* PBXTargetDependency */,
				09A86E0C34744361B27AEAA8 /* PBXTargetDependency */,
				97A7639B1FDE42E6AF704D93 /* PBXTargetDependency */,
				BA633DB16B764082B8446977 /* PBXTargetDependency */,
				FABA0731774D4EBB8CC6F6E1 /* PBXTargetDependency */,
				40DF76D95FFF4F1D8DA7E517 /* PBXTargetDependency */,
				28E179E002594CBCBD02A57D /* PBXTargetDependency */,
				C8A6215B1F6E473199BDFEDC /* PBXTargetDependency */,
				66DD288A5A0D4B548BCD7DD3 /* PBXTargetDependency */,
				2E395F94E44547DEBBBF2772 /* PBXTargetDependency */,
				55F0D3FC4F094FC8A98C0E48 /* PBXTargetDependency */,
			);
			name = ALL_BUILD;
			productName = ALL_BUILD;
		};
		D1672FA0564A459B90610A88 /* ZERO_CHECK */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = BB7985E5B4C0401D92CF9041 /* Build configuration list for PBXAggregateTarget "ZERO_CHECK" */;
			buildPhases = (
				3FA5C55E7AB6A4F27FFF4789 /* Generate CMakeFiles/ZERO_CHECK */,
			);
			dependencies = (
			);
			name = ZERO_CHECK;
			productName = ZERO_CHECK;
		};
/* End PBXAggregateTarget section */

/* Begin PBXBuildFile section */
		0160929121624058A1B33725 /* remuxing.c in Sources */ = {isa = PBXBuildFile; fileRef = F49EE493020143E6B3798E8C /* remuxing.c */; };
		02C2B68ED4E34408B0A13101 /* filtering_video.c in Sources */ = {isa = PBXBuildFile; fileRef = 75433C082BFD4E279F5B68AF /* filtering_video.c */; };
		1873A7E697094380AE9F6194 /* avio_list_dir.c in Sources */ = {isa = PBXBuildFile; fileRef = 803AF614B43549849EAB03BF /* avio_list_dir.c */; };
		1A76543128D045B89A84B7FF /* http_multiclient.c in Sources */ = {isa = PBXBuildFile; fileRef = 57096F291FCD4FE994EB894B /* http_multiclient.c */; };
		28E4E86714B8432C8CE58F94 /* encode_audio.c in Sources */ = {isa = PBXBuildFile; fileRef = 49DB34F93F5B4E8994E8A11F /* encode_audio.c */; };
		4B9D66328C884749B8141289 /* transcoding.c in Sources */ = {isa = PBXBuildFile; fileRef = 1EFDBC86F22F4435AAA457B3 /* transcoding.c */; };
		537DCE6966CE4357BB6625AB /* muxing.c in Sources */ = {isa = PBXBuildFile; fileRef = 79F5B062C5D743819EB7518B /* muxing.c */; };
		5754CC0ABFE2493B8A9E7AAD /* resampling_audio.c in Sources */ = {isa = PBXBuildFile; fileRef = B6D91BF839824C5887259EE2 /* resampling_audio.c */; };
		5C33252A64A9433BBFA5D135 /* hw_decode.c in Sources */ = {isa = PBXBuildFile; fileRef = B97378598BFD40BCA50D1E9D /* hw_decode.c */; };
		658C3BF272D44CDFA26894A6 /* filtering_audio.c in Sources */ = {isa = PBXBuildFile; fileRef = F3C05D5E283E480AA6FD9FF9 /* filtering_audio.c */; };
		6E21D4DE80724E2698CA0B64 /* metadata.c in Sources */ = {isa = PBXBuildFile; fileRef = 5DFF116C2AC549119360267B /* metadata.c */; };
		700DE2204F7841599A112D5A /* decode_audio.c in Sources */ = {isa = PBXBuildFile; fileRef = 57C7ADD3E35B4662988D9933 /* decode_audio.c */; };
		722C7091291B72F40010E950 /* CoreMedia.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 722C7090291B72F40010E950 /* CoreMedia.framework */; };
		722C7093291B72FC0010E950 /* CoreFoundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 722C7092291B72FC0010E950 /* CoreFoundation.framework */; };
		722C7095291B73040010E950 /* AVFoundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 722C7094291B73040010E950 /* AVFoundation.framework */; };
		722C7099291B732F0010E950 /* CoreVideo.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 722C7098291B732F0010E950 /* CoreVideo.framework */; };
		722C709B291B733D0010E950 /* VideoToolbox.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 722C709A291B733D0010E950 /* VideoToolbox.framework */; };
		B8BF47F2D2AF4E2797DF4761 /* scaling_video.c in Sources */ = {isa = PBXBuildFile; fileRef = 50F2AEFEE41E4D7D8ED03A17 /* scaling_video.c */; };
		B9F2DF077E594F348906C9D4 /* demuxing_decoding.c in Sources */ = {isa = PBXBuildFile; fileRef = B4DB24CE2CCD4E61BE32CF82 /* demuxing_decoding.c */; };
		DDDCA9A68D204EE2A45C5B33 /* decode_video.c in Sources */ = {isa = PBXBuildFile; fileRef = 6CC9337A02C24665A563335C /* decode_video.c */; };
		E49ADBA095BE42A2A4DE45B2 /* avio_reading.c in Sources */ = {isa = PBXBuildFile; fileRef = 86CF043AC70B4BC6AB901166 /* avio_reading.c */; };
		E761D5F6D6434D07912F9C45 /* encode_video.c in Sources */ = {isa = PBXBuildFile; fileRef = F8BB38B83EBC4827974D459D /* encode_video.c */; };
		E8B86962BF6C4EEBB4FBD2A8 /* extract_mvs.c in Sources */ = {isa = PBXBuildFile; fileRef = 4D0F285290D64CEA939CCB63 /* extract_mvs.c */; };
		FD3CFD9E93894224BF8487DC /* transcode_aac.c in Sources */ = {isa = PBXBuildFile; fileRef = EE80AAA9CE1745F688792F74 /* transcode_aac.c */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		04DB32B1073F4E249709DCE0 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1D89940BA63746CCA3C7E36E /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1672FA0564A459B90610A88;
			remoteInfo = ZERO_CHECK;
		};
		0CF88BCDD28F47EDB889B6A2 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1D89940BA63746CCA3C7E36E /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 046DB46B659B45088D8E6F79;
			remoteInfo = encode_audio;
		};
		106C0CE6428D407487946A68 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1D89940BA63746CCA3C7E36E /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = B98740D3F37042818119E8F0;
			remoteInfo = avio_reading;
		};
		17B8C44103CF4C83BFE1688A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1D89940BA63746CCA3C7E36E /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1672FA0564A459B90610A88;
			remoteInfo = ZERO_CHECK;
		};
		254DCE8F16BF4D06942DB834 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1D89940BA63746CCA3C7E36E /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = F5883134267440F8906CAA66;
			remoteInfo = encode_video;
		};
		28FE14F5F4E24E56A3310E48 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1D89940BA63746CCA3C7E36E /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = BF2E89D2CB7F43B8BE7D9007;
			remoteInfo = transcoding;
		};
		2B010CCD394B4DC785023943 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1D89940BA63746CCA3C7E36E /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 698FBE6C1FC44549BD576513;
			remoteInfo = transcode_aac;
		};
		3701BEAB9B4343CEA501298C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1D89940BA63746CCA3C7E36E /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 02ABA11E3C8F44DCAD038B38;
			remoteInfo = hw_decode;
		};
		3F6F013470E9419B99D1DFD4 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1D89940BA63746CCA3C7E36E /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1672FA0564A459B90610A88;
			remoteInfo = ZERO_CHECK;
		};
		4245769B62B14C558055ED85 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1D89940BA63746CCA3C7E36E /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 0FF5309E0E36443AA835DC81;
			remoteInfo = resampling_audio;
		};
		49CBABDF3EA741ABBD765C7F /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1D89940BA63746CCA3C7E36E /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = C88C94527E284F9EB482C328;
			remoteInfo = muxing;
		};
		4ADDF944333F4B8099F82037 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1D89940BA63746CCA3C7E36E /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1672FA0564A459B90610A88;
			remoteInfo = ZERO_CHECK;
		};
		4CACC9468D404FAF90907177 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1D89940BA63746CCA3C7E36E /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 39EA206F95AD41A7A6E11A0E;
			remoteInfo = filtering_video;
		};
		57ECAA4EB7CC4FCD8A9ED721 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1D89940BA63746CCA3C7E36E /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 228025551F754F7C98A70684;
			remoteInfo = decode_video;
		};
		605E83714D4C44E8816086EC /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1D89940BA63746CCA3C7E36E /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1672FA0564A459B90610A88;
			remoteInfo = ZERO_CHECK;
		};
		6338C706702147E7AD9322F3 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1D89940BA63746CCA3C7E36E /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1672FA0564A459B90610A88;
			remoteInfo = ZERO_CHECK;
		};
		636FC6D5E5DC404E823DBF3E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1D89940BA63746CCA3C7E36E /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 633E85CFAD584634ABA28226;
			remoteInfo = extract_mvs;
		};
		63A5F48DC209426EB390EF25 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1D89940BA63746CCA3C7E36E /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1672FA0564A459B90610A88;
			remoteInfo = ZERO_CHECK;
		};
		67BA618CBB7C4CD58C1A83F5 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1D89940BA63746CCA3C7E36E /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 51BA08E10C234C04B358A3A7;
			remoteInfo = filtering_audio;
		};
		6B3D701A049B42A4BF20A818 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1D89940BA63746CCA3C7E36E /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1672FA0564A459B90610A88;
			remoteInfo = ZERO_CHECK;
		};
		70BEAEA151BD439E935C8BE0 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1D89940BA63746CCA3C7E36E /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D839CA7613F447E8B44CFD34;
			remoteInfo = remuxing;
		};
		78B033AD874F450F997F3A9C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1D89940BA63746CCA3C7E36E /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1672FA0564A459B90610A88;
			remoteInfo = ZERO_CHECK;
		};
		7E257587D37740359D0FE405 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1D89940BA63746CCA3C7E36E /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1672FA0564A459B90610A88;
			remoteInfo = ZERO_CHECK;
		};
		7E75CB7D59A047D582B029C6 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1D89940BA63746CCA3C7E36E /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1672FA0564A459B90610A88;
			remoteInfo = ZERO_CHECK;
		};
		873CAB4D67F64662965DA21F /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1D89940BA63746CCA3C7E36E /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1672FA0564A459B90610A88;
			remoteInfo = ZERO_CHECK;
		};
		958C434926CF4598A913C26A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1D89940BA63746CCA3C7E36E /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2CC573AB4FC04764BA64B0F2;
			remoteInfo = scaling_video;
		};
		9BE8AFA84DFA4B5C8F3C914D /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1D89940BA63746CCA3C7E36E /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1672FA0564A459B90610A88;
			remoteInfo = ZERO_CHECK;
		};
		9EA7B24F00524D4ABF106EB6 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1D89940BA63746CCA3C7E36E /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1672FA0564A459B90610A88;
			remoteInfo = ZERO_CHECK;
		};
		9F33C4EAC2394D5BA22E8683 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1D89940BA63746CCA3C7E36E /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1672FA0564A459B90610A88;
			remoteInfo = ZERO_CHECK;
		};
		AFA5ADD490394CC48AAC5968 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1D89940BA63746CCA3C7E36E /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1672FA0564A459B90610A88;
			remoteInfo = ZERO_CHECK;
		};
		B4E7AA75A13D4D29B9F0B8B5 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1D89940BA63746CCA3C7E36E /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 16EC9654A30C43648E3C1F87;
			remoteInfo = decode_audio;
		};
		B6DFDC9154A44D94B14D2626 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1D89940BA63746CCA3C7E36E /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = A3E5A17FB1C149BA9E8C52BA;
			remoteInfo = http_multiclient;
		};
		D68251F9AD7F43B4AAC9A3FC /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1D89940BA63746CCA3C7E36E /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1672FA0564A459B90610A88;
			remoteInfo = ZERO_CHECK;
		};
		D9F3BE450AA14C1782082396 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1D89940BA63746CCA3C7E36E /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1672FA0564A459B90610A88;
			remoteInfo = ZERO_CHECK;
		};
		E6CD4911C7C74643B96FB25E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1D89940BA63746CCA3C7E36E /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 5CA7F52F832C4245A095220D;
			remoteInfo = avio_list_dir;
		};
		EC3A534F18EB41D8AC6275FE /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1D89940BA63746CCA3C7E36E /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1672FA0564A459B90610A88;
			remoteInfo = ZERO_CHECK;
		};
		F57814CED6BA457E90AB6032 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1D89940BA63746CCA3C7E36E /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D1672FA0564A459B90610A88;
			remoteInfo = ZERO_CHECK;
		};
		F7DE7BCAD65840DBBD29F393 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1D89940BA63746CCA3C7E36E /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 0D8BC61D4FEC4C00A4F1498E;
			remoteInfo = demuxing_decoding;
		};
		F9F3C23162744E8580F1CD6A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 1D89940BA63746CCA3C7E36E /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 6228091168604935BB17967D;
			remoteInfo = metadata;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		05A8CD56EE2D456888313A5D /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		0B7E7F71EEB84D909AF574FE /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		146278B5B3C140FD965508F5 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		15362634EE884308974723C7 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		181F2F034B484D85B538C4AD /* filtering_audio */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = filtering_audio; sourceTree = BUILT_PRODUCTS_DIR; };
		1A48860E0CD443878ECDFF2F /* demuxing_decoding */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = demuxing_decoding; sourceTree = BUILT_PRODUCTS_DIR; };
		1EFDBC86F22F4435AAA457B3 /* transcoding.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; path = transcoding.c; sourceTree = SOURCE_ROOT; };
		1F0CE00D5B554063BCD10D39 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		245758B7D5D14632AB7A321A /* hw_decode */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = hw_decode; sourceTree = BUILT_PRODUCTS_DIR; };
		288C1044321F4167BE71601A /* muxing */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = muxing; sourceTree = BUILT_PRODUCTS_DIR; };
		2A49E4554D8B41079446CAA1 /* transcode_aac */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = transcode_aac; sourceTree = BUILT_PRODUCTS_DIR; };
		2CC1410C9A4D45DEA33C7600 /* avio_reading */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = avio_reading; sourceTree = BUILT_PRODUCTS_DIR; };
		2D5DCE81D89E4334886DDDBA /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		2D7F878DDD4A43E5B458DD9E /* remuxing */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = remuxing; sourceTree = BUILT_PRODUCTS_DIR; };
		3A3950C103564B7CAF25918A /* encode_video */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = encode_video; sourceTree = BUILT_PRODUCTS_DIR; };
		3C1D6F4F38494881A8DB494E /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		3D8804006B584D4D964E630D /* filtering_video */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = filtering_video; sourceTree = BUILT_PRODUCTS_DIR; };
		49DB34F93F5B4E8994E8A11F /* encode_audio.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; path = encode_audio.c; sourceTree = SOURCE_ROOT; };
		4D0F285290D64CEA939CCB63 /* extract_mvs.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; path = extract_mvs.c; sourceTree = SOURCE_ROOT; };
		4D4EE1926BD84C37B9317559 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		50F2AEFEE41E4D7D8ED03A17 /* scaling_video.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; path = scaling_video.c; sourceTree = SOURCE_ROOT; };
		57096F291FCD4FE994EB894B /* http_multiclient.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; path = http_multiclient.c; sourceTree = SOURCE_ROOT; };
		57C7ADD3E35B4662988D9933 /* decode_audio.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; path = decode_audio.c; sourceTree = SOURCE_ROOT; };
		5C5B051E9B2042FEAE70F00B /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		5DFF116C2AC549119360267B /* metadata.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; path = metadata.c; sourceTree = SOURCE_ROOT; };
		600494C34D7B47A7B3B26A60 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		6311AC3B7400427AB4B88C0B /* decode_audio */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = decode_audio; sourceTree = BUILT_PRODUCTS_DIR; };
		635DF0658AA146389FB26A37 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		6CC9337A02C24665A563335C /* decode_video.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; path = decode_video.c; sourceTree = SOURCE_ROOT; };
		722C7090291B72F40010E950 /* CoreMedia.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = CoreMedia.framework; path = System/Library/Frameworks/CoreMedia.framework; sourceTree = SDKROOT; };
		722C7092291B72FC0010E950 /* CoreFoundation.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = CoreFoundation.framework; path = System/Library/Frameworks/CoreFoundation.framework; sourceTree = SDKROOT; };
		722C7094291B73040010E950 /* AVFoundation.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = AVFoundation.framework; path = System/Library/Frameworks/AVFoundation.framework; sourceTree = SDKROOT; };
		722C7096291B73210010E950 /* Foundation.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = Foundation.framework; path = System/Library/Frameworks/Foundation.framework; sourceTree = SDKROOT; };
		722C7098291B732F0010E950 /* CoreVideo.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = CoreVideo.framework; path = System/Library/Frameworks/CoreVideo.framework; sourceTree = SDKROOT; };
		722C709A291B733D0010E950 /* VideoToolbox.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = VideoToolbox.framework; path = System/Library/Frameworks/VideoToolbox.framework; sourceTree = SDKROOT; };
		75433C082BFD4E279F5B68AF /* filtering_video.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; path = filtering_video.c; sourceTree = SOURCE_ROOT; };
		761BB13665E947C5B006C963 /* transcoding */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = transcoding; sourceTree = BUILT_PRODUCTS_DIR; };
		78AF6DF0A40F44BCBDB551BA /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		79F5B062C5D743819EB7518B /* muxing.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; path = muxing.c; sourceTree = SOURCE_ROOT; };
		803AF614B43549849EAB03BF /* avio_list_dir.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; path = avio_list_dir.c; sourceTree = SOURCE_ROOT; };
		86CF043AC70B4BC6AB901166 /* avio_reading.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; path = avio_reading.c; sourceTree = SOURCE_ROOT; };
		8BC81F1E834E4169A56FB44D /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		8FEEBF942B7F4867B0783F5C /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		980F664B163548D297D9073F /* avio_list_dir */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = avio_list_dir; sourceTree = BUILT_PRODUCTS_DIR; };
		9D3DEAA8B0C54C99A3E8E14E /* http_multiclient */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = http_multiclient; sourceTree = BUILT_PRODUCTS_DIR; };
		A2107613484C40E0B5685E00 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		A92A2B36D31B40A0AB188F56 /* decode_video */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = decode_video; sourceTree = BUILT_PRODUCTS_DIR; };
		B4DB24CE2CCD4E61BE32CF82 /* demuxing_decoding.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; path = demuxing_decoding.c; sourceTree = SOURCE_ROOT; };
		B6D91BF839824C5887259EE2 /* resampling_audio.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; path = resampling_audio.c; sourceTree = SOURCE_ROOT; };
		B88B26B6708E49DABB508D39 /* encode_audio */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = encode_audio; sourceTree = BUILT_PRODUCTS_DIR; };
		B8C321C23830493291C4D5B8 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		B97378598BFD40BCA50D1E9D /* hw_decode.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; path = hw_decode.c; sourceTree = SOURCE_ROOT; };
		BE989792CC09480C9BF6487C /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		C87CB4EA903449079BDAC143 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		C93BDC82E9B14AC9929E19FD /* extract_mvs */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = extract_mvs; sourceTree = BUILT_PRODUCTS_DIR; };
		CE1DE391627B4378B8122FE9 /* resampling_audio */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = resampling_audio; sourceTree = BUILT_PRODUCTS_DIR; };
		D792CEE4EB6A4346BE30E154 /* metadata */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = metadata; sourceTree = BUILT_PRODUCTS_DIR; };
		E5E46C3888C440D2AD3F04A5 /* scaling_video */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = scaling_video; sourceTree = BUILT_PRODUCTS_DIR; };
		ECDEE744DC614A4CACF1F003 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		EE80AAA9CE1745F688792F74 /* transcode_aac.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; path = transcode_aac.c; sourceTree = SOURCE_ROOT; };
		F3C05D5E283E480AA6FD9FF9 /* filtering_audio.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; path = filtering_audio.c; sourceTree = SOURCE_ROOT; };
		F49EE493020143E6B3798E8C /* remuxing.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; path = remuxing.c; sourceTree = SOURCE_ROOT; };
		F8BB38B83EBC4827974D459D /* encode_video.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; path = encode_video.c; sourceTree = SOURCE_ROOT; };
		FE063E4AC5304DFABF921BA8 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		0FCCB889E3774ADF8100B385 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1FDB616259E0440A9A03B523 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		20ABEC0FEBB4476AB4282636 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		31DE93A51D3E4C488F11C886 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		3679E9F9CC054D39ADD403FA /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		373A5C69D4D542A2857402C3 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		4D20AE6711484C6E8F9ED9DD /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				722C709B291B733D0010E950 /* VideoToolbox.framework in Frameworks */,
				722C7099291B732F0010E950 /* CoreVideo.framework in Frameworks */,
				722C7091291B72F40010E950 /* CoreMedia.framework in Frameworks */,
				722C7095291B73040010E950 /* AVFoundation.framework in Frameworks */,
				722C7093291B72FC0010E950 /* CoreFoundation.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		5BF963DF2BA946D7AA10B4F3 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		78BE625091D24793BE7AFA0A /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		8590D7FE079B4D9BB6815134 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		861A6A1ECD25407FB19211A9 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		894F5DC2CD6A4C2A9C73249F /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		A062E2EFA4C2485B957E3360 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		AF206A867DBE4D488D63099C /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		BC4F9BA7689F487EA91BF61D /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		C40D9DD83AE3404BB8C25701 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		C629D44F19B84FDDA5A6D5D3 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		C62EA65966944ADFAFE9FED5 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		DC96D0A2EA824D5382CBB64E /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		078AA5A9EFC0496DA84A383D /* avio_reading */ = {
			isa = PBXGroup;
			children = (
				3ED8318322764C9A97283378 /* Source Files */,
				8FEEBF942B7F4867B0783F5C /* CMakeLists.txt */,
			);
			name = avio_reading;
			sourceTree = "<group>";
		};
		085AAFBB8F4E40F0BEF8C12D /* filtering_video */ = {
			isa = PBXGroup;
			children = (
				F8729C395B8B4D219B325B58 /* Source Files */,
				78AF6DF0A40F44BCBDB551BA /* CMakeLists.txt */,
			);
			name = filtering_video;
			sourceTree = "<group>";
		};
		12FA47768C434AA99439D4A2 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				57096F291FCD4FE994EB894B /* http_multiclient.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		135C5A765C224C688589D034 /* http_multiclient */ = {
			isa = PBXGroup;
			children = (
				12FA47768C434AA99439D4A2 /* Source Files */,
				FE063E4AC5304DFABF921BA8 /* CMakeLists.txt */,
			);
			name = http_multiclient;
			sourceTree = "<group>";
		};
		1A28DBD684A94D30B31E0BFE /* extract_mvs */ = {
			isa = PBXGroup;
			children = (
				97F0C0A9F53D4C3B8D38390F /* Source Files */,
				A2107613484C40E0B5685E00 /* CMakeLists.txt */,
			);
			name = extract_mvs;
			sourceTree = "<group>";
		};
		24BA7CC0760249E1B8764568 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				EE80AAA9CE1745F688792F74 /* transcode_aac.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		3416EA2BA6DC4D7FBBE7EE3A /* demuxing_decoding */ = {
			isa = PBXGroup;
			children = (
				8869730AC6BC44E1B099B677 /* Source Files */,
				ECDEE744DC614A4CACF1F003 /* CMakeLists.txt */,
			);
			name = demuxing_decoding;
			sourceTree = "<group>";
		};
		3D445D046FF24E99B66DD000 /* transcode_aac */ = {
			isa = PBXGroup;
			children = (
				24BA7CC0760249E1B8764568 /* Source Files */,
				BE989792CC09480C9BF6487C /* CMakeLists.txt */,
			);
			name = transcode_aac;
			sourceTree = "<group>";
		};
		3ED8318322764C9A97283378 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				86CF043AC70B4BC6AB901166 /* avio_reading.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		40F9F96B251D460C81DDEEFB /* Source Files */ = {
			isa = PBXGroup;
			children = (
				F49EE493020143E6B3798E8C /* remuxing.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		41ECE5B319074EA0B9385A0B /* decode_audio */ = {
			isa = PBXGroup;
			children = (
				84B54EE52EEE4E2A9D1997B5 /* Source Files */,
				3C1D6F4F38494881A8DB494E /* CMakeLists.txt */,
			);
			name = decode_audio;
			sourceTree = "<group>";
		};
		52D5BEECA37A4F04913A0ADB /* remuxing */ = {
			isa = PBXGroup;
			children = (
				40F9F96B251D460C81DDEEFB /* Source Files */,
				8BC81F1E834E4169A56FB44D /* CMakeLists.txt */,
			);
			name = remuxing;
			sourceTree = "<group>";
		};
		5439670BCB95474F985F60FE /* avio_list_dir */ = {
			isa = PBXGroup;
			children = (
				65E048643D70414FB141BA28 /* Source Files */,
				4D4EE1926BD84C37B9317559 /* CMakeLists.txt */,
			);
			name = avio_list_dir;
			sourceTree = "<group>";
		};
		5921C93A589F48D0BCDEDC12 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				5DFF116C2AC549119360267B /* metadata.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		65E048643D70414FB141BA28 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				803AF614B43549849EAB03BF /* avio_list_dir.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		6A143455481D46F4BAF6084A /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		71A1C7CAF93746FD9F80EFDA /* Source Files */ = {
			isa = PBXGroup;
			children = (
				F8BB38B83EBC4827974D459D /* encode_video.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		7400FD5E98024C0184935EAD /* Source Files */ = {
			isa = PBXGroup;
			children = (
				50F2AEFEE41E4D7D8ED03A17 /* scaling_video.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		76B5391049324B4BA4D380B7 = {
			isa = PBXGroup;
			children = (
				5439670BCB95474F985F60FE /* avio_list_dir */,
				078AA5A9EFC0496DA84A383D /* avio_reading */,
				41ECE5B319074EA0B9385A0B /* decode_audio */,
				B4AA4ABF550D4D2A938C6B2D /* decode_video */,
				3416EA2BA6DC4D7FBBE7EE3A /* demuxing_decoding */,
				E8B931E859CA4F20816052E8 /* encode_audio */,
				D37B3254524E4E83A516C790 /* encode_video */,
				1A28DBD684A94D30B31E0BFE /* extract_mvs */,
				085AAFBB8F4E40F0BEF8C12D /* filtering_video */,
				A18E21C50CE04ABF9386F7BF /* filtering_audio */,
				135C5A765C224C688589D034 /* http_multiclient */,
				A4FF351EF8354EBD83BC0019 /* hw_decode */,
				D4AC2801DD864F4E9BDD1609 /* metadata */,
				89B5A907082B4DABBC6EF035 /* muxing */,
				52D5BEECA37A4F04913A0ADB /* remuxing */,
				838BE333C7604FFE9D4C5916 /* resampling_audio */,
				E6C2F6C5E88C45FC85F59807 /* scaling_video */,
				3D445D046FF24E99B66DD000 /* transcode_aac */,
				FB2890D7E1524537BAB72083 /* transcoding */,
				EAE0A7C91F5146BD8FF1614A /* ALL_BUILD */,
				DF32E02668414BEBBC1F8ECC /* Products */,
				AE8D2844E9DE44D6A8FFF45E /* Frameworks */,
			);
			sourceTree = "<group>";
		};
		772E9C04B06F40A7AE2F3FF8 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				B97378598BFD40BCA50D1E9D /* hw_decode.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		838BE333C7604FFE9D4C5916 /* resampling_audio */ = {
			isa = PBXGroup;
			children = (
				8AE4BC6E1B8E42839948FE13 /* Source Files */,
				05A8CD56EE2D456888313A5D /* CMakeLists.txt */,
			);
			name = resampling_audio;
			sourceTree = "<group>";
		};
		84B54EE52EEE4E2A9D1997B5 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				57C7ADD3E35B4662988D9933 /* decode_audio.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		8869730AC6BC44E1B099B677 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				B4DB24CE2CCD4E61BE32CF82 /* demuxing_decoding.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		89B5A907082B4DABBC6EF035 /* muxing */ = {
			isa = PBXGroup;
			children = (
				DB8AAC56384D45138F71674D /* Source Files */,
				146278B5B3C140FD965508F5 /* CMakeLists.txt */,
			);
			name = muxing;
			sourceTree = "<group>";
		};
		8AE4BC6E1B8E42839948FE13 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				B6D91BF839824C5887259EE2 /* resampling_audio.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		97F0C0A9F53D4C3B8D38390F /* Source Files */ = {
			isa = PBXGroup;
			children = (
				4D0F285290D64CEA939CCB63 /* extract_mvs.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		A18E21C50CE04ABF9386F7BF /* filtering_audio */ = {
			isa = PBXGroup;
			children = (
				D978AAB09210429D9A0D1954 /* Source Files */,
				600494C34D7B47A7B3B26A60 /* CMakeLists.txt */,
			);
			name = filtering_audio;
			sourceTree = "<group>";
		};
		A4FF351EF8354EBD83BC0019 /* hw_decode */ = {
			isa = PBXGroup;
			children = (
				772E9C04B06F40A7AE2F3FF8 /* Source Files */,
				0B7E7F71EEB84D909AF574FE /* CMakeLists.txt */,
			);
			name = hw_decode;
			sourceTree = "<group>";
		};
		AE8D2844E9DE44D6A8FFF45E /* Frameworks */ = {
			isa = PBXGroup;
			children = (
				722C709A291B733D0010E950 /* VideoToolbox.framework */,
				722C7098291B732F0010E950 /* CoreVideo.framework */,
				722C7096291B73210010E950 /* Foundation.framework */,
				722C7094291B73040010E950 /* AVFoundation.framework */,
				722C7092291B72FC0010E950 /* CoreFoundation.framework */,
				722C7090291B72F40010E950 /* CoreMedia.framework */,
			);
			name = Frameworks;
			sourceTree = "<group>";
		};
		B4AA4ABF550D4D2A938C6B2D /* decode_video */ = {
			isa = PBXGroup;
			children = (
				BFD42BCC355349EC8C0B9796 /* Source Files */,
				1F0CE00D5B554063BCD10D39 /* CMakeLists.txt */,
			);
			name = decode_video;
			sourceTree = "<group>";
		};
		BD9F6FFFF153447DB46DE99C /* Source Files */ = {
			isa = PBXGroup;
			children = (
				1EFDBC86F22F4435AAA457B3 /* transcoding.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		BEF695EE0BAB47EDAF16B5F6 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				49DB34F93F5B4E8994E8A11F /* encode_audio.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		BFD42BCC355349EC8C0B9796 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				6CC9337A02C24665A563335C /* decode_video.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		D37B3254524E4E83A516C790 /* encode_video */ = {
			isa = PBXGroup;
			children = (
				71A1C7CAF93746FD9F80EFDA /* Source Files */,
				B8C321C23830493291C4D5B8 /* CMakeLists.txt */,
			);
			name = encode_video;
			sourceTree = "<group>";
		};
		D4AC2801DD864F4E9BDD1609 /* metadata */ = {
			isa = PBXGroup;
			children = (
				5921C93A589F48D0BCDEDC12 /* Source Files */,
				15362634EE884308974723C7 /* CMakeLists.txt */,
			);
			name = metadata;
			sourceTree = "<group>";
		};
		D978AAB09210429D9A0D1954 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				F3C05D5E283E480AA6FD9FF9 /* filtering_audio.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		DB8AAC56384D45138F71674D /* Source Files */ = {
			isa = PBXGroup;
			children = (
				79F5B062C5D743819EB7518B /* muxing.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		DF32E02668414BEBBC1F8ECC /* Products */ = {
			isa = PBXGroup;
			children = (
				980F664B163548D297D9073F /* avio_list_dir */,
				2CC1410C9A4D45DEA33C7600 /* avio_reading */,
				6311AC3B7400427AB4B88C0B /* decode_audio */,
				A92A2B36D31B40A0AB188F56 /* decode_video */,
				1A48860E0CD443878ECDFF2F /* demuxing_decoding */,
				B88B26B6708E49DABB508D39 /* encode_audio */,
				3A3950C103564B7CAF25918A /* encode_video */,
				C93BDC82E9B14AC9929E19FD /* extract_mvs */,
				181F2F034B484D85B538C4AD /* filtering_audio */,
				3D8804006B584D4D964E630D /* filtering_video */,
				9D3DEAA8B0C54C99A3E8E14E /* http_multiclient */,
				245758B7D5D14632AB7A321A /* hw_decode */,
				D792CEE4EB6A4346BE30E154 /* metadata */,
				288C1044321F4167BE71601A /* muxing */,
				2D7F878DDD4A43E5B458DD9E /* remuxing */,
				CE1DE391627B4378B8122FE9 /* resampling_audio */,
				E5E46C3888C440D2AD3F04A5 /* scaling_video */,
				2A49E4554D8B41079446CAA1 /* transcode_aac */,
				761BB13665E947C5B006C963 /* transcoding */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		E6C2F6C5E88C45FC85F59807 /* scaling_video */ = {
			isa = PBXGroup;
			children = (
				7400FD5E98024C0184935EAD /* Source Files */,
				2D5DCE81D89E4334886DDDBA /* CMakeLists.txt */,
			);
			name = scaling_video;
			sourceTree = "<group>";
		};
		E8B931E859CA4F20816052E8 /* encode_audio */ = {
			isa = PBXGroup;
			children = (
				BEF695EE0BAB47EDAF16B5F6 /* Source Files */,
				635DF0658AA146389FB26A37 /* CMakeLists.txt */,
			);
			name = encode_audio;
			sourceTree = "<group>";
		};
		EAE0A7C91F5146BD8FF1614A /* ALL_BUILD */ = {
			isa = PBXGroup;
			children = (
				6A143455481D46F4BAF6084A /* CMake Rules */,
				5C5B051E9B2042FEAE70F00B /* CMakeLists.txt */,
			);
			name = ALL_BUILD;
			sourceTree = "<group>";
		};
		F8729C395B8B4D219B325B58 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				75433C082BFD4E279F5B68AF /* filtering_video.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		FB2890D7E1524537BAB72083 /* transcoding */ = {
			isa = PBXGroup;
			children = (
				BD9F6FFFF153447DB46DE99C /* Source Files */,
				C87CB4EA903449079BDAC143 /* CMakeLists.txt */,
			);
			name = transcoding;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		02ABA11E3C8F44DCAD038B38 /* hw_decode */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = FDD4DEBE32F247C59EE63D80 /* Build configuration list for PBXNativeTarget "hw_decode" */;
			buildPhases = (
				56856D8A23A8454292431ACA /* Sources */,
				5BF963DF2BA946D7AA10B4F3 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				C0DF9BEA85EB4B1DAAC3778F /* PBXTargetDependency */,
			);
			name = hw_decode;
			productName = hw_decode;
			productReference = 245758B7D5D14632AB7A321A /* hw_decode */;
			productType = "com.apple.product-type.tool";
		};
		046DB46B659B45088D8E6F79 /* encode_audio */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = B219E96343BE47B7AE3B7775 /* Build configuration list for PBXNativeTarget "encode_audio" */;
			buildPhases = (
				7AE4D0F501EB40FFB85F18C0 /* Sources */,
				78BE625091D24793BE7AFA0A /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				B916F39081F9490FB26AEF38 /* PBXTargetDependency */,
			);
			name = encode_audio;
			productName = encode_audio;
			productReference = B88B26B6708E49DABB508D39 /* encode_audio */;
			productType = "com.apple.product-type.tool";
		};
		0D8BC61D4FEC4C00A4F1498E /* demuxing_decoding */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 6615E6A666324A86A29C1A38 /* Build configuration list for PBXNativeTarget "demuxing_decoding" */;
			buildPhases = (
				038E5D7532CE4252AB040BAA /* Sources */,
				20ABEC0FEBB4476AB4282636 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				2E0EAD2C95F4467093E494AB /* PBXTargetDependency */,
			);
			name = demuxing_decoding;
			productName = demuxing_decoding;
			productReference = 1A48860E0CD443878ECDFF2F /* demuxing_decoding */;
			productType = "com.apple.product-type.tool";
		};
		0FF5309E0E36443AA835DC81 /* resampling_audio */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = C6EBF9A065264D7891C9BA0A /* Build configuration list for PBXNativeTarget "resampling_audio" */;
			buildPhases = (
				CD51E015318E466884325690 /* Sources */,
				0FCCB889E3774ADF8100B385 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				8D2C7606987949DA889B05B0 /* PBXTargetDependency */,
			);
			name = resampling_audio;
			productName = resampling_audio;
			productReference = CE1DE391627B4378B8122FE9 /* resampling_audio */;
			productType = "com.apple.product-type.tool";
		};
		16EC9654A30C43648E3C1F87 /* decode_audio */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 9D669F4B419B4E349AA1899F /* Build configuration list for PBXNativeTarget "decode_audio" */;
			buildPhases = (
				CEC6EDA54DAA484DB268EAB7 /* Sources */,
				AF206A867DBE4D488D63099C /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				1670B030E2004C5188228FA1 /* PBXTargetDependency */,
			);
			name = decode_audio;
			productName = decode_audio;
			productReference = 6311AC3B7400427AB4B88C0B /* decode_audio */;
			productType = "com.apple.product-type.tool";
		};
		228025551F754F7C98A70684 /* decode_video */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 08E791B9BABF401CA5FC8616 /* Build configuration list for PBXNativeTarget "decode_video" */;
			buildPhases = (
				B3156463D19342078F4D9CA3 /* Sources */,
				BC4F9BA7689F487EA91BF61D /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				C696C1EB5898432B827F1D92 /* PBXTargetDependency */,
			);
			name = decode_video;
			productName = decode_video;
			productReference = A92A2B36D31B40A0AB188F56 /* decode_video */;
			productType = "com.apple.product-type.tool";
		};
		2CC573AB4FC04764BA64B0F2 /* scaling_video */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 859CDEE96AF64DE7A101B3EC /* Build configuration list for PBXNativeTarget "scaling_video" */;
			buildPhases = (
				6A0CDE1824054CA09305D519 /* Sources */,
				C62EA65966944ADFAFE9FED5 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				D59559BC29B94CC490E8D5C5 /* PBXTargetDependency */,
			);
			name = scaling_video;
			productName = scaling_video;
			productReference = E5E46C3888C440D2AD3F04A5 /* scaling_video */;
			productType = "com.apple.product-type.tool";
		};
		39EA206F95AD41A7A6E11A0E /* filtering_video */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 8050590301C944DF9356BEB2 /* Build configuration list for PBXNativeTarget "filtering_video" */;
			buildPhases = (
				7204C140542448878AFF0D72 /* Sources */,
				3679E9F9CC054D39ADD403FA /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				328AC3B2589B40E998036C87 /* PBXTargetDependency */,
			);
			name = filtering_video;
			productName = filtering_video;
			productReference = 3D8804006B584D4D964E630D /* filtering_video */;
			productType = "com.apple.product-type.tool";
		};
		51BA08E10C234C04B358A3A7 /* filtering_audio */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 3F0B27E04F17418ABB4A6318 /* Build configuration list for PBXNativeTarget "filtering_audio" */;
			buildPhases = (
				0F0433B681B64E618573BE87 /* Sources */,
				861A6A1ECD25407FB19211A9 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				C148BF0723C94CC9A1F9657C /* PBXTargetDependency */,
			);
			name = filtering_audio;
			productName = filtering_audio;
			productReference = 181F2F034B484D85B538C4AD /* filtering_audio */;
			productType = "com.apple.product-type.tool";
		};
		5CA7F52F832C4245A095220D /* avio_list_dir */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = D404536792E04983AD4F04F3 /* Build configuration list for PBXNativeTarget "avio_list_dir" */;
			buildPhases = (
				4B4757BFF70B4E07B7DBB863 /* Sources */,
				A062E2EFA4C2485B957E3360 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				01D94871270041358982247D /* PBXTargetDependency */,
			);
			name = avio_list_dir;
			productName = avio_list_dir;
			productReference = 980F664B163548D297D9073F /* avio_list_dir */;
			productType = "com.apple.product-type.tool";
		};
		6228091168604935BB17967D /* metadata */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 12EE73DEBE5F40C0A7EBF6B7 /* Build configuration list for PBXNativeTarget "metadata" */;
			buildPhases = (
				A39BA72FEFFD43159300EB1E /* Sources */,
				C40D9DD83AE3404BB8C25701 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				DB638B085B644A1DAE9EA479 /* PBXTargetDependency */,
			);
			name = metadata;
			productName = metadata;
			productReference = D792CEE4EB6A4346BE30E154 /* metadata */;
			productType = "com.apple.product-type.tool";
		};
		633E85CFAD584634ABA28226 /* extract_mvs */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 8DB5F28F4B3A4C86826C3B92 /* Build configuration list for PBXNativeTarget "extract_mvs" */;
			buildPhases = (
				EADF02ECC0C443BFB10532CC /* Sources */,
				894F5DC2CD6A4C2A9C73249F /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				68C0C61A56764FBAA2CAD29C /* PBXTargetDependency */,
			);
			name = extract_mvs;
			productName = extract_mvs;
			productReference = C93BDC82E9B14AC9929E19FD /* extract_mvs */;
			productType = "com.apple.product-type.tool";
		};
		698FBE6C1FC44549BD576513 /* transcode_aac */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = F89C144208C84E669B0C86D3 /* Build configuration list for PBXNativeTarget "transcode_aac" */;
			buildPhases = (
				DAB43D26B2FE4C6EB1922EEB /* Sources */,
				1FDB616259E0440A9A03B523 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				022FBB5B5F704E349B7E6EF6 /* PBXTargetDependency */,
			);
			name = transcode_aac;
			productName = transcode_aac;
			productReference = 2A49E4554D8B41079446CAA1 /* transcode_aac */;
			productType = "com.apple.product-type.tool";
		};
		A3E5A17FB1C149BA9E8C52BA /* http_multiclient */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = D78430A6153B49259F2A740F /* Build configuration list for PBXNativeTarget "http_multiclient" */;
			buildPhases = (
				E4755284E52B42529B1EC41D /* Sources */,
				C629D44F19B84FDDA5A6D5D3 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				F404DE51B77E4508A3A6FF14 /* PBXTargetDependency */,
			);
			name = http_multiclient;
			productName = http_multiclient;
			productReference = 9D3DEAA8B0C54C99A3E8E14E /* http_multiclient */;
			productType = "com.apple.product-type.tool";
		};
		B98740D3F37042818119E8F0 /* avio_reading */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 9FDEB44F962248008B10BA80 /* Build configuration list for PBXNativeTarget "avio_reading" */;
			buildPhases = (
				BDCE561383F842C38120E97B /* Sources */,
				8590D7FE079B4D9BB6815134 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				C54F1E1AB55F4460B0F608ED /* PBXTargetDependency */,
			);
			name = avio_reading;
			productName = avio_reading;
			productReference = 2CC1410C9A4D45DEA33C7600 /* avio_reading */;
			productType = "com.apple.product-type.tool";
		};
		BF2E89D2CB7F43B8BE7D9007 /* transcoding */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = C3E3A40009494D8D9AF52C7E /* Build configuration list for PBXNativeTarget "transcoding" */;
			buildPhases = (
				DE0D2A44A88641B5B2C839EE /* Sources */,
				373A5C69D4D542A2857402C3 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				AAFD92106F824C1C8A9CF4FF /* PBXTargetDependency */,
			);
			name = transcoding;
			productName = transcoding;
			productReference = 761BB13665E947C5B006C963 /* transcoding */;
			productType = "com.apple.product-type.tool";
		};
		C88C94527E284F9EB482C328 /* muxing */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 9EE6D54236694AF8A0FEE066 /* Build configuration list for PBXNativeTarget "muxing" */;
			buildPhases = (
				215ABD4EDC0746E48AB1F703 /* Sources */,
				DC96D0A2EA824D5382CBB64E /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				61EC5A12F6804D24BFBC196E /* PBXTargetDependency */,
			);
			name = muxing;
			productName = muxing;
			productReference = 288C1044321F4167BE71601A /* muxing */;
			productType = "com.apple.product-type.tool";
		};
		D839CA7613F447E8B44CFD34 /* remuxing */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 978EE0B1D5BF4F238EADC0F3 /* Build configuration list for PBXNativeTarget "remuxing" */;
			buildPhases = (
				FE55BBF3D8FF442B83A7DFCE /* Sources */,
				31DE93A51D3E4C488F11C886 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				94C4598B2EFA4E0A965A88B4 /* PBXTargetDependency */,
			);
			name = remuxing;
			productName = remuxing;
			productReference = 2D7F878DDD4A43E5B458DD9E /* remuxing */;
			productType = "com.apple.product-type.tool";
		};
		F5883134267440F8906CAA66 /* encode_video */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 17D074FD28684C9DB8A7A419 /* Build configuration list for PBXNativeTarget "encode_video" */;
			buildPhases = (
				620017CA724341CF92F1089E /* Sources */,
				4D20AE6711484C6E8F9ED9DD /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				AD75A0C180754CCAA6EF4FC9 /* PBXTargetDependency */,
			);
			name = encode_video;
			productName = encode_video;
			productReference = 3A3950C103564B7CAF25918A /* encode_video */;
			productType = "com.apple.product-type.tool";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		1D89940BA63746CCA3C7E36E /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 1250;
			};
			buildConfigurationList = 37C376EF504E47B59513D4FE /* Build configuration list for PBXProject "FFmpeg" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = en;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
				Base,
			);
			mainGroup = 76B5391049324B4BA4D380B7;
			projectDirPath = ../;
			projectRoot = "";
			targets = (
				868C2A9636AF4582B430AA73 /* ALL_BUILD */,
				D1672FA0564A459B90610A88 /* ZERO_CHECK */,
				5CA7F52F832C4245A095220D /* avio_list_dir */,
				B98740D3F37042818119E8F0 /* avio_reading */,
				16EC9654A30C43648E3C1F87 /* decode_audio */,
				228025551F754F7C98A70684 /* decode_video */,
				0D8BC61D4FEC4C00A4F1498E /* demuxing_decoding */,
				046DB46B659B45088D8E6F79 /* encode_audio */,
				F5883134267440F8906CAA66 /* encode_video */,
				633E85CFAD584634ABA28226 /* extract_mvs */,
				51BA08E10C234C04B358A3A7 /* filtering_audio */,
				39EA206F95AD41A7A6E11A0E /* filtering_video */,
				A3E5A17FB1C149BA9E8C52BA /* http_multiclient */,
				02ABA11E3C8F44DCAD038B38 /* hw_decode */,
				6228091168604935BB17967D /* metadata */,
				C88C94527E284F9EB482C328 /* muxing */,
				D839CA7613F447E8B44CFD34 /* remuxing */,
				0FF5309E0E36443AA835DC81 /* resampling_audio */,
				2CC573AB4FC04764BA64B0F2 /* scaling_video */,
				698FBE6C1FC44549BD576513 /* transcode_aac */,
				BF2E89D2CB7F43B8BE7D9007 /* transcoding */,
			);
		};
/* End PBXProject section */

/* Begin PBXShellScriptBuildPhase section */
		3FA5C55E7AB6A4F27FFF4789 /* Generate CMakeFiles/ZERO_CHECK */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Generate CMakeFiles/ZERO_CHECK";
			outputPaths = (
				/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode/CMakeFiles/ZERO_CHECK,
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode\n  make -f /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode/CMakeScripts/ReRunCMake.make\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode\n  make -f /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode/CMakeScripts/ReRunCMake.make\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode\n  make -f /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode/CMakeScripts/ReRunCMake.make\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode\n  make -f /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode/CMakeScripts/ReRunCMake.make\nfi\n";
			showEnvVarsInLog = 0;
		};
		5774497EBB9268464D1D427F /* Generate CMakeFiles/ALL_BUILD */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Generate CMakeFiles/ALL_BUILD";
			outputPaths = (
				/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode/CMakeFiles/ALL_BUILD,
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode\n  echo Build\\ all\\ projects\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode\n  echo Build\\ all\\ projects\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode\n  echo Build\\ all\\ projects\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode\n  echo Build\\ all\\ projects\nfi\n";
			showEnvVarsInLog = 0;
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		038E5D7532CE4252AB040BAA /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				B9F2DF077E594F348906C9D4 /* demuxing_decoding.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		0F0433B681B64E618573BE87 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				658C3BF272D44CDFA26894A6 /* filtering_audio.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		215ABD4EDC0746E48AB1F703 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				537DCE6966CE4357BB6625AB /* muxing.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		4B4757BFF70B4E07B7DBB863 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1873A7E697094380AE9F6194 /* avio_list_dir.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		56856D8A23A8454292431ACA /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				5C33252A64A9433BBFA5D135 /* hw_decode.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		620017CA724341CF92F1089E /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				E761D5F6D6434D07912F9C45 /* encode_video.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		6A0CDE1824054CA09305D519 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				B8BF47F2D2AF4E2797DF4761 /* scaling_video.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		7204C140542448878AFF0D72 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				02C2B68ED4E34408B0A13101 /* filtering_video.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		7AE4D0F501EB40FFB85F18C0 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				28E4E86714B8432C8CE58F94 /* encode_audio.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		A39BA72FEFFD43159300EB1E /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				6E21D4DE80724E2698CA0B64 /* metadata.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		B3156463D19342078F4D9CA3 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				DDDCA9A68D204EE2A45C5B33 /* decode_video.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		BDCE561383F842C38120E97B /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				E49ADBA095BE42A2A4DE45B2 /* avio_reading.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		CD51E015318E466884325690 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				5754CC0ABFE2493B8A9E7AAD /* resampling_audio.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		CEC6EDA54DAA484DB268EAB7 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				700DE2204F7841599A112D5A /* decode_audio.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		DAB43D26B2FE4C6EB1922EEB /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				FD3CFD9E93894224BF8487DC /* transcode_aac.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		DE0D2A44A88641B5B2C839EE /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				4B9D66328C884749B8141289 /* transcoding.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		E4755284E52B42529B1EC41D /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1A76543128D045B89A84B7FF /* http_multiclient.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		EADF02ECC0C443BFB10532CC /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				E8B86962BF6C4EEBB4FBD2A8 /* extract_mvs.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		FE55BBF3D8FF442B83A7DFCE /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				0160929121624058A1B33725 /* remuxing.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		01D94871270041358982247D /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1672FA0564A459B90610A88 /* ZERO_CHECK */;
			targetProxy = 6338C706702147E7AD9322F3 /* PBXContainerItemProxy */;
		};
		022FBB5B5F704E349B7E6EF6 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1672FA0564A459B90610A88 /* ZERO_CHECK */;
			targetProxy = 04DB32B1073F4E249709DCE0 /* PBXContainerItemProxy */;
		};
		09A86E0C34744361B27AEAA8 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 51BA08E10C234C04B358A3A7 /* filtering_audio */;
			targetProxy = 67BA618CBB7C4CD58C1A83F5 /* PBXContainerItemProxy */;
		};
		1670B030E2004C5188228FA1 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1672FA0564A459B90610A88 /* ZERO_CHECK */;
			targetProxy = 6B3D701A049B42A4BF20A818 /* PBXContainerItemProxy */;
		};
		28E179E002594CBCBD02A57D /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D839CA7613F447E8B44CFD34 /* remuxing */;
			targetProxy = 70BEAEA151BD439E935C8BE0 /* PBXContainerItemProxy */;
		};
		2E0EAD2C95F4467093E494AB /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1672FA0564A459B90610A88 /* ZERO_CHECK */;
			targetProxy = 9F33C4EAC2394D5BA22E8683 /* PBXContainerItemProxy */;
		};
		2E395F94E44547DEBBBF2772 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 698FBE6C1FC44549BD576513 /* transcode_aac */;
			targetProxy = 2B010CCD394B4DC785023943 /* PBXContainerItemProxy */;
		};
		328AC3B2589B40E998036C87 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1672FA0564A459B90610A88 /* ZERO_CHECK */;
			targetProxy = D9F3BE450AA14C1782082396 /* PBXContainerItemProxy */;
		};
		40DF76D95FFF4F1D8DA7E517 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = C88C94527E284F9EB482C328 /* muxing */;
			targetProxy = 49CBABDF3EA741ABBD765C7F /* PBXContainerItemProxy */;
		};
		55F0D3FC4F094FC8A98C0E48 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = BF2E89D2CB7F43B8BE7D9007 /* transcoding */;
			targetProxy = 28FE14F5F4E24E56A3310E48 /* PBXContainerItemProxy */;
		};
		6103A1367D894B72A75FA11B /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 046DB46B659B45088D8E6F79 /* encode_audio */;
			targetProxy = 0CF88BCDD28F47EDB889B6A2 /* PBXContainerItemProxy */;
		};
		61EC5A12F6804D24BFBC196E /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1672FA0564A459B90610A88 /* ZERO_CHECK */;
			targetProxy = 3F6F013470E9419B99D1DFD4 /* PBXContainerItemProxy */;
		};
		63E9293C80354ADF935CD25C /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 0D8BC61D4FEC4C00A4F1498E /* demuxing_decoding */;
			targetProxy = F7DE7BCAD65840DBBD29F393 /* PBXContainerItemProxy */;
		};
		66DD288A5A0D4B548BCD7DD3 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2CC573AB4FC04764BA64B0F2 /* scaling_video */;
			targetProxy = 958C434926CF4598A913C26A /* PBXContainerItemProxy */;
		};
		67CD1F3527594EE89D7FF645 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 633E85CFAD584634ABA28226 /* extract_mvs */;
			targetProxy = 636FC6D5E5DC404E823DBF3E /* PBXContainerItemProxy */;
		};
		68C0C61A56764FBAA2CAD29C /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1672FA0564A459B90610A88 /* ZERO_CHECK */;
			targetProxy = 63A5F48DC209426EB390EF25 /* PBXContainerItemProxy */;
		};
		6C721895F5F9450197287A5B /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1672FA0564A459B90610A88 /* ZERO_CHECK */;
			targetProxy = 605E83714D4C44E8816086EC /* PBXContainerItemProxy */;
		};
		8D2C7606987949DA889B05B0 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1672FA0564A459B90610A88 /* ZERO_CHECK */;
			targetProxy = EC3A534F18EB41D8AC6275FE /* PBXContainerItemProxy */;
		};
		9244E10E53CC499D95845752 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 39EA206F95AD41A7A6E11A0E /* filtering_video */;
			targetProxy = 4CACC9468D404FAF90907177 /* PBXContainerItemProxy */;
		};
		94C4598B2EFA4E0A965A88B4 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1672FA0564A459B90610A88 /* ZERO_CHECK */;
			targetProxy = AFA5ADD490394CC48AAC5968 /* PBXContainerItemProxy */;
		};
		97A7639B1FDE42E6AF704D93 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = A3E5A17FB1C149BA9E8C52BA /* http_multiclient */;
			targetProxy = B6DFDC9154A44D94B14D2626 /* PBXContainerItemProxy */;
		};
		AAFD92106F824C1C8A9CF4FF /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1672FA0564A459B90610A88 /* ZERO_CHECK */;
			targetProxy = 7E257587D37740359D0FE405 /* PBXContainerItemProxy */;
		};
		AD75A0C180754CCAA6EF4FC9 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1672FA0564A459B90610A88 /* ZERO_CHECK */;
			targetProxy = 17B8C44103CF4C83BFE1688A /* PBXContainerItemProxy */;
		};
		B276C79D8E594B64AD93CF3B /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 5CA7F52F832C4245A095220D /* avio_list_dir */;
			targetProxy = E6CD4911C7C74643B96FB25E /* PBXContainerItemProxy */;
		};
		B916F39081F9490FB26AEF38 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1672FA0564A459B90610A88 /* ZERO_CHECK */;
			targetProxy = 7E75CB7D59A047D582B029C6 /* PBXContainerItemProxy */;
		};
		BA633DB16B764082B8446977 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 02ABA11E3C8F44DCAD038B38 /* hw_decode */;
			targetProxy = 3701BEAB9B4343CEA501298C /* PBXContainerItemProxy */;
		};
		C0DF9BEA85EB4B1DAAC3778F /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1672FA0564A459B90610A88 /* ZERO_CHECK */;
			targetProxy = 9EA7B24F00524D4ABF106EB6 /* PBXContainerItemProxy */;
		};
		C148BF0723C94CC9A1F9657C /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1672FA0564A459B90610A88 /* ZERO_CHECK */;
			targetProxy = 9BE8AFA84DFA4B5C8F3C914D /* PBXContainerItemProxy */;
		};
		C54F1E1AB55F4460B0F608ED /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1672FA0564A459B90610A88 /* ZERO_CHECK */;
			targetProxy = 4ADDF944333F4B8099F82037 /* PBXContainerItemProxy */;
		};
		C696C1EB5898432B827F1D92 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1672FA0564A459B90610A88 /* ZERO_CHECK */;
			targetProxy = D68251F9AD7F43B4AAC9A3FC /* PBXContainerItemProxy */;
		};
		C8A6215B1F6E473199BDFEDC /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 0FF5309E0E36443AA835DC81 /* resampling_audio */;
			targetProxy = 4245769B62B14C558055ED85 /* PBXContainerItemProxy */;
		};
		D59559BC29B94CC490E8D5C5 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1672FA0564A459B90610A88 /* ZERO_CHECK */;
			targetProxy = 873CAB4D67F64662965DA21F /* PBXContainerItemProxy */;
		};
		DB638B085B644A1DAE9EA479 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1672FA0564A459B90610A88 /* ZERO_CHECK */;
			targetProxy = F57814CED6BA457E90AB6032 /* PBXContainerItemProxy */;
		};
		DE15BC90A3C54A4CAA8E2B7B /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = F5883134267440F8906CAA66 /* encode_video */;
			targetProxy = 254DCE8F16BF4D06942DB834 /* PBXContainerItemProxy */;
		};
		E0E4E0F8894144DDA2607BCD /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 228025551F754F7C98A70684 /* decode_video */;
			targetProxy = 57ECAA4EB7CC4FCD8A9ED721 /* PBXContainerItemProxy */;
		};
		E24B3DA9B8304A7AB30540C0 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = B98740D3F37042818119E8F0 /* avio_reading */;
			targetProxy = 106C0CE6428D407487946A68 /* PBXContainerItemProxy */;
		};
		F404DE51B77E4508A3A6FF14 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D1672FA0564A459B90610A88 /* ZERO_CHECK */;
			targetProxy = 78B033AD874F450F997F3A9C /* PBXContainerItemProxy */;
		};
		FABA0731774D4EBB8CC6F6E1 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 6228091168604935BB17967D /* metadata */;
			targetProxy = F9F3C23162744E8580F1CD6A /* PBXContainerItemProxy */;
		};
		FC21E08646EB4AB8A97F3A2B /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 16EC9654A30C43648E3C1F87 /* decode_audio */;
			targetProxy = B4E7AA75A13D4D29B9F0B8B5 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		0815C9D950CD401BB2D04140 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/encode_video;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = "    $(inherited)";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = encode_video;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		0E0B4B5F6AA54E8A85E2A51B /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/hw_decode;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = "    $(inherited)";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = hw_decode;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		0F53B7D516FD4FCD8561EBCE /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/avio_list_dir;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = avio_list_dir;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		107DD724209141F79ABC06D4 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/decode_video/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = decode_video;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		10A00527EB314901A4A84A23 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/encode_audio/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = encode_audio;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		11E77CB484CB4EC79B774113 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/hw_decode/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = hw_decode;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		185F04E867874F9AB8610D37 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/resampling_audio/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = resampling_audio;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		189E66D2B3AD4AB2802B1126 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/scaling_video;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = scaling_video;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		1D50F78DA6434DD1BE85BAAA /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/avio_list_dir/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = avio_list_dir;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		1E5A88AE07544DDE89629036 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/filtering_audio/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = filtering_audio;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		26DACC50AADB4ABC9AA9A431 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/http_multiclient/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = http_multiclient;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		27B8615CF60A461F9D5F22F5 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = "$(NATIVE_ARCH_ACTUAL)";
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.3.sdk;
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode/build;
			};
			name = MinSizeRel;
		};
		326C00DC3AC14F5D983FABC4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/metadata;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = metadata;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		3799FD2B171A4A74A3059D0F /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/encode_audio/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = encode_audio;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		3A403EAB53B14988802E34EA /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/decode_audio/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = decode_audio;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		3A4BA443836C4A668E3A85AA /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		43326ECF64AD4B5D82609DF2 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/decode_audio/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = decode_audio;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		4AE69FE87DAE4559910ACB5C /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/avio_list_dir/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = avio_list_dir;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		4B3590416A0A4266B1B7ED87 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/remuxing;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = remuxing;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		4D22D7DFEBCA46269A027C27 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/filtering_video/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = filtering_video;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		5F088AF3BA1B4FB198619293 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/hw_decode;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = hw_decode;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		644AB559144747B183A7FACD /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/transcode_aac/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = transcode_aac;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		64588D63638443698DB8D413 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/metadata;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = "    $(inherited)";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = metadata;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		672213C1F20E4A24924E68C0 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/extract_mvs/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = extract_mvs;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		674F1921CCB54E7FB8AD6BDF /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/muxing/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = muxing;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		67E9D6E5C9E840CAA3EE93ED /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/decode_video;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = "    $(inherited)";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = decode_video;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		6937015FCA8A4A428E9E8FF4 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/transcode_aac;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = "    $(inherited)";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = transcode_aac;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		6976726A067C4E5999E4AEAA /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = "$(NATIVE_ARCH_ACTUAL)";
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.3.sdk;
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode/build;
			};
			name = Debug;
		};
		69BED872C0CE49948E1184BD /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/http_multiclient/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = http_multiclient;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		6AABD00DE0F0463DA119F204 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/avio_reading/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = avio_reading;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		6D3B87A4516A4D89AA800A71 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/transcode_aac;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = transcode_aac;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		76E54930AE61445F9F1B5E11 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/scaling_video/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = scaling_video;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		78BB619C20D7489D9830E74D /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/transcoding;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = "    $(inherited)";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = transcoding;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		7F49EAAF9EBE47B5A7C412E7 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = "$(NATIVE_ARCH_ACTUAL)";
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.3.sdk;
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode/build;
			};
			name = Release;
		};
		7F9A49AE5022462694FF46A3 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/decode_audio;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = decode_audio;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		822CA53530D64FE79D0472EC /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/muxing;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = "    $(inherited)";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = muxing;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		83890659FBBF4827B6937C7E /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/scaling_video;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = "    $(inherited)";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = scaling_video;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		866B3831931B42F88EC3291E /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/transcode_aac/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = transcode_aac;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		8B1AAA1720BF48D58638165A /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/transcoding/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = transcoding;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		8CFDD3A48AD64175A66D4CDD /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/decode_video/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = decode_video;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		8FD048C755BF4570B3FBD405 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/resampling_audio;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = resampling_audio;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		9045BC2328DF40879F91E319 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		9349BAAA60D644AE92BFB77B /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		950F93E65BF4453C9483EBC8 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/decode_audio;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = "    $(inherited)";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = decode_audio;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		96ECDBFE4B2E439090742E77 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/filtering_video;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = "    $(inherited)";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = filtering_video;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		970F218AE61C417189F9604D /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/extract_mvs;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = extract_mvs;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		975A7F7B53D74B24A95A10BE /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		9C2819606F65409D8FE21061 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/resampling_audio;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = "    $(inherited)";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = resampling_audio;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		9CBF7CBF550A46CD99977641 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/encode_audio;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = encode_audio;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		9D2E3FF6416043519A62E78D /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/metadata/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = metadata;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		9E5061415D944EDFB2AD5683 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/extract_mvs/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = extract_mvs;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		9EBD80CB2D2744C8A300F72C /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/demuxing_decoding;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = demuxing_decoding;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		A5B87DB91A9F47198084C0B2 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/resampling_audio/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = resampling_audio;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		A7BDB103A36D4EA19D2F3A4C /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		A8EF24D0D1E64AF9BAFE37F4 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = "$(NATIVE_ARCH_ACTUAL)";
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.3.sdk;
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode/build;
			};
			name = RelWithDebInfo;
		};
		AB0CC83314E2466D900A8276 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/filtering_audio;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = filtering_audio;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		AFFFCF9104F84AA19220FFDC /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/encode_video/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = encode_video;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		B20A95A3EE314D888BCFA968 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/avio_reading/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = avio_reading;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		B27ADBFA52BE482EA6FB4679 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/remuxing/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = remuxing;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		B2997CC82DA84B68A7CAC501 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		B4D45A9D48E24AF595BD5EB4 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/scaling_video/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = scaling_video;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		B5F4B1E369064EC498AA3282 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/remuxing/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = remuxing;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		C0D40B3FDE9A46188F1A5407 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/extract_mvs;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = "    $(inherited)";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = extract_mvs;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		C4B723D04FD84F658E2EDA4C /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/filtering_audio/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = filtering_audio;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		C8E4D24487ED4406A4CE8BED /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		C9501A3ABD3B49A682C63C77 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/encode_video/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = encode_video;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		CB2AD1067EFE4044B176E289 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/decode_video;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = decode_video;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		CC13B158A89B464A8C36103D /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/demuxing_decoding/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = demuxing_decoding;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		CC916D97D93A41F49DDCC89F /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/filtering_audio;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = "    $(inherited)";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = filtering_audio;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		D2D0C003936542E28269CBCE /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/http_multiclient;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = "    $(inherited)";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = http_multiclient;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		D31F4F9CA3904F1299536A42 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/hw_decode/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = hw_decode;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		D36947F9B6A743D58475EA35 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/muxing;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = muxing;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		D4A09AC13CD6413E83F96845 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/encode_video;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = encode_video;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		D505DD073E62450FBFB4B8DB /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/muxing/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = muxing;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		D8D933E816F14534BB78BB88 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/remuxing;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = "    $(inherited)";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = remuxing;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		DA2A1A1F9ABE47E28D8916B3 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		DB54715E32AA4970852CCC4F /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/encode_audio;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = "    $(inherited)";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = encode_audio;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		DD474FCE7A6142C3A7B9F139 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/demuxing_decoding/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = demuxing_decoding;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		E8BAC3CB2AAE4CEEA8975F44 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/metadata/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = metadata;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		E8DC014902D945CD9C97712A /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/transcoding/RelWithDebInfo;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = transcoding;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		E9517806C2F8498EACA8860D /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/avio_list_dir;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = "    $(inherited)";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = avio_list_dir;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		EA5A2DFF3ED84EEBA1C77EC0 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/avio_reading;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = "    $(inherited)";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = avio_reading;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		EF05A79ABF194189A6A0C3CD /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/avio_reading;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = avio_reading;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		F3878432BA02438E89AF5D18 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/transcoding;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = transcoding;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		F5F2A531099841BE8E6BAFCA /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/filtering_video/MinSizeRel;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = filtering_video;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		F71E2BB92A5A4763A07DFA8D /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/demuxing_decoding;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = "    $(inherited)";
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = demuxing_decoding;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		FAC5216BA68844D48871B332 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/filtering_video;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = filtering_video;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		FDA506A97D3F4BA68C7D562C /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/bin/http_multiclient;
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 3;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					/System/Library/Frameworks,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../../build,
					/Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/../..,
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LD_RUNPATH_SEARCH_PATHS = (
					/usr/local/lib,
					"$(inherited)",
				);
				LIBRARY_SEARCH_PATHS = (
					"/usr/local/lib/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)",
					/usr/local/lib,
					"$(inherited)",
				);
				OTHER_CFLAGS = (
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					/usr/local/lib/libavdevice.dylib,
					/usr/local/lib/libavformat.dylib,
					/usr/local/lib/libavfilter.dylib,
					/usr/local/lib/libavcodec.dylib,
					/usr/local/lib/libswresample.dylib,
					/usr/local/lib/libswscale.dylib,
					/usr/local/lib/libavutil.dylib,
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = http_multiclient;
				SECTORDER_FLAGS = "";
				SYMROOT = /Users/tl/Documents/workSpace/github/FFmpeg/doc/examples/xcode;
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		08E791B9BABF401CA5FC8616 /* Build configuration list for PBXNativeTarget "decode_video" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				67E9D6E5C9E840CAA3EE93ED /* Debug */,
				CB2AD1067EFE4044B176E289 /* Release */,
				107DD724209141F79ABC06D4 /* MinSizeRel */,
				8CFDD3A48AD64175A66D4CDD /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		12EE73DEBE5F40C0A7EBF6B7 /* Build configuration list for PBXNativeTarget "metadata" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				64588D63638443698DB8D413 /* Debug */,
				326C00DC3AC14F5D983FABC4 /* Release */,
				E8BAC3CB2AAE4CEEA8975F44 /* MinSizeRel */,
				9D2E3FF6416043519A62E78D /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		166E0215B72749ADA10376F0 /* Build configuration list for PBXAggregateTarget "ALL_BUILD" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				A7BDB103A36D4EA19D2F3A4C /* Debug */,
				DA2A1A1F9ABE47E28D8916B3 /* Release */,
				C8E4D24487ED4406A4CE8BED /* MinSizeRel */,
				9045BC2328DF40879F91E319 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		17D074FD28684C9DB8A7A419 /* Build configuration list for PBXNativeTarget "encode_video" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				0815C9D950CD401BB2D04140 /* Debug */,
				D4A09AC13CD6413E83F96845 /* Release */,
				AFFFCF9104F84AA19220FFDC /* MinSizeRel */,
				C9501A3ABD3B49A682C63C77 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		37C376EF504E47B59513D4FE /* Build configuration list for PBXProject "FFmpeg" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				6976726A067C4E5999E4AEAA /* Debug */,
				7F49EAAF9EBE47B5A7C412E7 /* Release */,
				27B8615CF60A461F9D5F22F5 /* MinSizeRel */,
				A8EF24D0D1E64AF9BAFE37F4 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		3F0B27E04F17418ABB4A6318 /* Build configuration list for PBXNativeTarget "filtering_audio" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				CC916D97D93A41F49DDCC89F /* Debug */,
				AB0CC83314E2466D900A8276 /* Release */,
				1E5A88AE07544DDE89629036 /* MinSizeRel */,
				C4B723D04FD84F658E2EDA4C /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		6615E6A666324A86A29C1A38 /* Build configuration list for PBXNativeTarget "demuxing_decoding" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				F71E2BB92A5A4763A07DFA8D /* Debug */,
				9EBD80CB2D2744C8A300F72C /* Release */,
				DD474FCE7A6142C3A7B9F139 /* MinSizeRel */,
				CC13B158A89B464A8C36103D /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		8050590301C944DF9356BEB2 /* Build configuration list for PBXNativeTarget "filtering_video" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				96ECDBFE4B2E439090742E77 /* Debug */,
				FAC5216BA68844D48871B332 /* Release */,
				F5F2A531099841BE8E6BAFCA /* MinSizeRel */,
				4D22D7DFEBCA46269A027C27 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		859CDEE96AF64DE7A101B3EC /* Build configuration list for PBXNativeTarget "scaling_video" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				83890659FBBF4827B6937C7E /* Debug */,
				189E66D2B3AD4AB2802B1126 /* Release */,
				76E54930AE61445F9F1B5E11 /* MinSizeRel */,
				B4D45A9D48E24AF595BD5EB4 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		8DB5F28F4B3A4C86826C3B92 /* Build configuration list for PBXNativeTarget "extract_mvs" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				C0D40B3FDE9A46188F1A5407 /* Debug */,
				970F218AE61C417189F9604D /* Release */,
				9E5061415D944EDFB2AD5683 /* MinSizeRel */,
				672213C1F20E4A24924E68C0 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		978EE0B1D5BF4F238EADC0F3 /* Build configuration list for PBXNativeTarget "remuxing" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				D8D933E816F14534BB78BB88 /* Debug */,
				4B3590416A0A4266B1B7ED87 /* Release */,
				B27ADBFA52BE482EA6FB4679 /* MinSizeRel */,
				B5F4B1E369064EC498AA3282 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		9D669F4B419B4E349AA1899F /* Build configuration list for PBXNativeTarget "decode_audio" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				950F93E65BF4453C9483EBC8 /* Debug */,
				7F9A49AE5022462694FF46A3 /* Release */,
				43326ECF64AD4B5D82609DF2 /* MinSizeRel */,
				3A403EAB53B14988802E34EA /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		9EE6D54236694AF8A0FEE066 /* Build configuration list for PBXNativeTarget "muxing" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				822CA53530D64FE79D0472EC /* Debug */,
				D36947F9B6A743D58475EA35 /* Release */,
				674F1921CCB54E7FB8AD6BDF /* MinSizeRel */,
				D505DD073E62450FBFB4B8DB /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		9FDEB44F962248008B10BA80 /* Build configuration list for PBXNativeTarget "avio_reading" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				EA5A2DFF3ED84EEBA1C77EC0 /* Debug */,
				EF05A79ABF194189A6A0C3CD /* Release */,
				6AABD00DE0F0463DA119F204 /* MinSizeRel */,
				B20A95A3EE314D888BCFA968 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		B219E96343BE47B7AE3B7775 /* Build configuration list for PBXNativeTarget "encode_audio" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				DB54715E32AA4970852CCC4F /* Debug */,
				9CBF7CBF550A46CD99977641 /* Release */,
				3799FD2B171A4A74A3059D0F /* MinSizeRel */,
				10A00527EB314901A4A84A23 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		BB7985E5B4C0401D92CF9041 /* Build configuration list for PBXAggregateTarget "ZERO_CHECK" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				3A4BA443836C4A668E3A85AA /* Debug */,
				975A7F7B53D74B24A95A10BE /* Release */,
				9349BAAA60D644AE92BFB77B /* MinSizeRel */,
				B2997CC82DA84B68A7CAC501 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		C3E3A40009494D8D9AF52C7E /* Build configuration list for PBXNativeTarget "transcoding" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				78BB619C20D7489D9830E74D /* Debug */,
				F3878432BA02438E89AF5D18 /* Release */,
				8B1AAA1720BF48D58638165A /* MinSizeRel */,
				E8DC014902D945CD9C97712A /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		C6EBF9A065264D7891C9BA0A /* Build configuration list for PBXNativeTarget "resampling_audio" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				9C2819606F65409D8FE21061 /* Debug */,
				8FD048C755BF4570B3FBD405 /* Release */,
				185F04E867874F9AB8610D37 /* MinSizeRel */,
				A5B87DB91A9F47198084C0B2 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		D404536792E04983AD4F04F3 /* Build configuration list for PBXNativeTarget "avio_list_dir" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				E9517806C2F8498EACA8860D /* Debug */,
				0F53B7D516FD4FCD8561EBCE /* Release */,
				4AE69FE87DAE4559910ACB5C /* MinSizeRel */,
				1D50F78DA6434DD1BE85BAAA /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		D78430A6153B49259F2A740F /* Build configuration list for PBXNativeTarget "http_multiclient" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				D2D0C003936542E28269CBCE /* Debug */,
				FDA506A97D3F4BA68C7D562C /* Release */,
				69BED872C0CE49948E1184BD /* MinSizeRel */,
				26DACC50AADB4ABC9AA9A431 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		F89C144208C84E669B0C86D3 /* Build configuration list for PBXNativeTarget "transcode_aac" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				6937015FCA8A4A428E9E8FF4 /* Debug */,
				6D3B87A4516A4D89AA800A71 /* Release */,
				644AB559144747B183A7FACD /* MinSizeRel */,
				866B3831931B42F88EC3291E /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		FDD4DEBE32F247C59EE63D80 /* Build configuration list for PBXNativeTarget "hw_decode" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				0E0B4B5F6AA54E8A85E2A51B /* Debug */,
				5F088AF3BA1B4FB198619293 /* Release */,
				D31F4F9CA3904F1299536A42 /* MinSizeRel */,
				11E77CB484CB4EC79B774113 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
/* End XCConfigurationList section */
	};
	rootObject = 1D89940BA63746CCA3C7E36E /* Project object */;
}
